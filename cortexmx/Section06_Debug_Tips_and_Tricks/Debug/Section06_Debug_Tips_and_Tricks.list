
Section06_Debug_Tips_and_Tricks.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001680  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a8  08001850  08001850  00011850  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080019f8  080019f8  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  080019f8  080019f8  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080019f8  080019f8  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080019f8  080019f8  000119f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080019fc  080019fc  000119fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001a00  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  200000ac  08001aac  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000e4  08001aac  000200e4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002523  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000006b0  00000000  00000000  000225ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00022cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  00022de8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002b31  00000000  00000000  00022ee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014b4  00000000  00000000  00025a19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000097e4  00000000  00000000  00026ecd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000306b1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000eb0  00000000  00000000  00030704  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200000ac 	.word	0x200000ac
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001838 	.word	0x08001838

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200000b0 	.word	0x200000b0
 800020c:	08001838 	.word	0x08001838

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b084      	sub	sp, #16
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 80002ba:	2300      	movs	r3, #0
 80002bc:	60fb      	str	r3, [r7, #12]
 80002be:	e015      	b.n	80002ec <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002c0:	f000 fa70 	bl	80007a4 <rand>
 80002c4:	4602      	mov	r2, r0
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	009b      	lsls	r3, r3, #2
 80002ca:	6879      	ldr	r1, [r7, #4]
 80002cc:	4419      	add	r1, r3
 80002ce:	4b0c      	ldr	r3, [pc, #48]	; (8000300 <array_fill_numbers+0x50>)
 80002d0:	fb83 0302 	smull	r0, r3, r3, r2
 80002d4:	1198      	asrs	r0, r3, #6
 80002d6:	17d3      	asrs	r3, r2, #31
 80002d8:	1ac3      	subs	r3, r0, r3
 80002da:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002de:	fb00 f303 	mul.w	r3, r0, r3
 80002e2:	1ad3      	subs	r3, r2, r3
 80002e4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002e6:	68fb      	ldr	r3, [r7, #12]
 80002e8:	3301      	adds	r3, #1
 80002ea:	60fb      	str	r3, [r7, #12]
 80002ec:	68fa      	ldr	r2, [r7, #12]
 80002ee:	683b      	ldr	r3, [r7, #0]
 80002f0:	429a      	cmp	r2, r3
 80002f2:	d3e5      	bcc.n	80002c0 <array_fill_numbers+0x10>
    }

}
 80002f4:	bf00      	nop
 80002f6:	bf00      	nop
 80002f8:	3710      	adds	r7, #16
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}
 80002fe:	bf00      	nop
 8000300:	10624dd3 	.word	0x10624dd3

08000304 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	b086      	sub	sp, #24
 8000308:	af00      	add	r7, sp, #0
 800030a:	60f8      	str	r0, [r7, #12]
 800030c:	60b9      	str	r1, [r7, #8]
 800030e:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 8000310:	6879      	ldr	r1, [r7, #4]
 8000312:	480e      	ldr	r0, [pc, #56]	; (800034c <display_numbers+0x48>)
 8000314:	f000 fa18 	bl	8000748 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 8000318:	2300      	movs	r3, #0
 800031a:	617b      	str	r3, [r7, #20]
 800031c:	e00b      	b.n	8000336 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 800031e:	697b      	ldr	r3, [r7, #20]
 8000320:	009b      	lsls	r3, r3, #2
 8000322:	68fa      	ldr	r2, [r7, #12]
 8000324:	4413      	add	r3, r2
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4619      	mov	r1, r3
 800032a:	4809      	ldr	r0, [pc, #36]	; (8000350 <display_numbers+0x4c>)
 800032c:	f000 fa0c 	bl	8000748 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000330:	697b      	ldr	r3, [r7, #20]
 8000332:	3301      	adds	r3, #1
 8000334:	617b      	str	r3, [r7, #20]
 8000336:	697a      	ldr	r2, [r7, #20]
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	429a      	cmp	r2, r3
 800033c:	d3ef      	bcc.n	800031e <display_numbers+0x1a>
    }

    printf("\n");
 800033e:	200a      	movs	r0, #10
 8000340:	f000 fa1a 	bl	8000778 <putchar>
}
 8000344:	bf00      	nop
 8000346:	3718      	adds	r7, #24
 8000348:	46bd      	mov	sp, r7
 800034a:	bd80      	pop	{r7, pc}
 800034c:	08001850 	.word	0x08001850
 8000350:	08001854 	.word	0x08001854

08000354 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000354:	b480      	push	{r7}
 8000356:	b085      	sub	sp, #20
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
 800035c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000364:	683b      	ldr	r3, [r7, #0]
 8000366:	681a      	ldr	r2, [r3, #0]
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800036c:	683b      	ldr	r3, [r7, #0]
 800036e:	68fa      	ldr	r2, [r7, #12]
 8000370:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000372:	4b04      	ldr	r3, [pc, #16]	; (8000384 <swap_numbers+0x30>)
 8000374:	220a      	movs	r2, #10
 8000376:	601a      	str	r2, [r3, #0]
}
 8000378:	bf00      	nop
 800037a:	3714      	adds	r7, #20
 800037c:	46bd      	mov	sp, r7
 800037e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000382:	4770      	bx	lr
 8000384:	20000044 	.word	0x20000044

08000388 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b086      	sub	sp, #24
 800038c:	af00      	add	r7, sp, #0
 800038e:	6078      	str	r0, [r7, #4]
 8000390:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000392:	2300      	movs	r3, #0
 8000394:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000396:	2300      	movs	r3, #0
 8000398:	617b      	str	r3, [r7, #20]
 800039a:	e02f      	b.n	80003fc <bubble_sort+0x74>
    {
        flag=0;
 800039c:	2300      	movs	r3, #0
 800039e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 80003a0:	2300      	movs	r3, #0
 80003a2:	613b      	str	r3, [r7, #16]
 80003a4:	e01d      	b.n	80003e2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 80003a6:	693b      	ldr	r3, [r7, #16]
 80003a8:	009b      	lsls	r3, r3, #2
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	4413      	add	r3, r2
 80003ae:	681a      	ldr	r2, [r3, #0]
 80003b0:	693b      	ldr	r3, [r7, #16]
 80003b2:	3301      	adds	r3, #1
 80003b4:	009b      	lsls	r3, r3, #2
 80003b6:	6879      	ldr	r1, [r7, #4]
 80003b8:	440b      	add	r3, r1
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	429a      	cmp	r2, r3
 80003be:	dd0d      	ble.n	80003dc <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003c0:	693b      	ldr	r3, [r7, #16]
 80003c2:	009b      	lsls	r3, r3, #2
 80003c4:	687a      	ldr	r2, [r7, #4]
 80003c6:	18d0      	adds	r0, r2, r3
 80003c8:	693b      	ldr	r3, [r7, #16]
 80003ca:	3301      	adds	r3, #1
 80003cc:	009b      	lsls	r3, r3, #2
 80003ce:	687a      	ldr	r2, [r7, #4]
 80003d0:	4413      	add	r3, r2
 80003d2:	4619      	mov	r1, r3
 80003d4:	f7ff ffbe 	bl	8000354 <swap_numbers>
                flag=1;
 80003d8:	2301      	movs	r3, #1
 80003da:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003dc:	693b      	ldr	r3, [r7, #16]
 80003de:	3301      	adds	r3, #1
 80003e0:	613b      	str	r3, [r7, #16]
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	683a      	ldr	r2, [r7, #0]
 80003e6:	1ad3      	subs	r3, r2, r3
 80003e8:	1e5a      	subs	r2, r3, #1
 80003ea:	693b      	ldr	r3, [r7, #16]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	d8da      	bhi.n	80003a6 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003f0:	68fb      	ldr	r3, [r7, #12]
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d008      	beq.n	8000408 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003f6:	697b      	ldr	r3, [r7, #20]
 80003f8:	3301      	adds	r3, #1
 80003fa:	617b      	str	r3, [r7, #20]
 80003fc:	683b      	ldr	r3, [r7, #0]
 80003fe:	1e5a      	subs	r2, r3, #1
 8000400:	697b      	ldr	r3, [r7, #20]
 8000402:	429a      	cmp	r2, r3
 8000404:	d8ca      	bhi.n	800039c <bubble_sort+0x14>
            break;
    }
}
 8000406:	e000      	b.n	800040a <bubble_sort+0x82>
            break;
 8000408:	bf00      	nop
}
 800040a:	bf00      	nop
 800040c:	3718      	adds	r7, #24
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}

08000412 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 8000412:	b480      	push	{r7}
 8000414:	b087      	sub	sp, #28
 8000416:	af00      	add	r7, sp, #0
 8000418:	6078      	str	r0, [r7, #4]
 800041a:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 800041c:	2301      	movs	r3, #1
 800041e:	617b      	str	r3, [r7, #20]
 8000420:	e02c      	b.n	800047c <insertion_sort+0x6a>
     {
         j=i-1;
 8000422:	697b      	ldr	r3, [r7, #20]
 8000424:	3b01      	subs	r3, #1
 8000426:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000428:	697b      	ldr	r3, [r7, #20]
 800042a:	009b      	lsls	r3, r3, #2
 800042c:	687a      	ldr	r2, [r7, #4]
 800042e:	4413      	add	r3, r2
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000434:	e00d      	b.n	8000452 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000436:	693b      	ldr	r3, [r7, #16]
 8000438:	009b      	lsls	r3, r3, #2
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	441a      	add	r2, r3
 800043e:	693b      	ldr	r3, [r7, #16]
 8000440:	3301      	adds	r3, #1
 8000442:	009b      	lsls	r3, r3, #2
 8000444:	6879      	ldr	r1, [r7, #4]
 8000446:	440b      	add	r3, r1
 8000448:	6812      	ldr	r2, [r2, #0]
 800044a:	601a      	str	r2, [r3, #0]
             j--;
 800044c:	693b      	ldr	r3, [r7, #16]
 800044e:	3b01      	subs	r3, #1
 8000450:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000452:	693b      	ldr	r3, [r7, #16]
 8000454:	2b00      	cmp	r3, #0
 8000456:	db07      	blt.n	8000468 <insertion_sort+0x56>
 8000458:	693b      	ldr	r3, [r7, #16]
 800045a:	009b      	lsls	r3, r3, #2
 800045c:	687a      	ldr	r2, [r7, #4]
 800045e:	4413      	add	r3, r2
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	68fa      	ldr	r2, [r7, #12]
 8000464:	429a      	cmp	r2, r3
 8000466:	dbe6      	blt.n	8000436 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000468:	693b      	ldr	r3, [r7, #16]
 800046a:	3301      	adds	r3, #1
 800046c:	009b      	lsls	r3, r3, #2
 800046e:	687a      	ldr	r2, [r7, #4]
 8000470:	4413      	add	r3, r2
 8000472:	68fa      	ldr	r2, [r7, #12]
 8000474:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000476:	697b      	ldr	r3, [r7, #20]
 8000478:	3301      	adds	r3, #1
 800047a:	617b      	str	r3, [r7, #20]
 800047c:	697b      	ldr	r3, [r7, #20]
 800047e:	683a      	ldr	r2, [r7, #0]
 8000480:	429a      	cmp	r2, r3
 8000482:	d8ce      	bhi.n	8000422 <insertion_sort+0x10>
     }


}
 8000484:	bf00      	nop
 8000486:	bf00      	nop
 8000488:	371c      	adds	r7, #28
 800048a:	46bd      	mov	sp, r7
 800048c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000490:	4770      	bx	lr
	...

08000494 <main>:



int main()
{
 8000494:	b580      	push	{r7, lr}
 8000496:	b082      	sub	sp, #8
 8000498:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800049a:	2311      	movs	r3, #17
 800049c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800049e:	6879      	ldr	r1, [r7, #4]
 80004a0:	4813      	ldr	r0, [pc, #76]	; (80004f0 <main+0x5c>)
 80004a2:	f7ff ff05 	bl	80002b0 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 80004a6:	4a13      	ldr	r2, [pc, #76]	; (80004f4 <main+0x60>)
 80004a8:	6879      	ldr	r1, [r7, #4]
 80004aa:	4811      	ldr	r0, [pc, #68]	; (80004f0 <main+0x5c>)
 80004ac:	f7ff ff2a 	bl	8000304 <display_numbers>

    bubble_sort(numbers,len);
 80004b0:	6879      	ldr	r1, [r7, #4]
 80004b2:	480f      	ldr	r0, [pc, #60]	; (80004f0 <main+0x5c>)
 80004b4:	f7ff ff68 	bl	8000388 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 80004b8:	4a0f      	ldr	r2, [pc, #60]	; (80004f8 <main+0x64>)
 80004ba:	6879      	ldr	r1, [r7, #4]
 80004bc:	480c      	ldr	r0, [pc, #48]	; (80004f0 <main+0x5c>)
 80004be:	f7ff ff21 	bl	8000304 <display_numbers>

    array_fill_numbers(numbers,len);
 80004c2:	6879      	ldr	r1, [r7, #4]
 80004c4:	480a      	ldr	r0, [pc, #40]	; (80004f0 <main+0x5c>)
 80004c6:	f7ff fef3 	bl	80002b0 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004ca:	4a0c      	ldr	r2, [pc, #48]	; (80004fc <main+0x68>)
 80004cc:	6879      	ldr	r1, [r7, #4]
 80004ce:	4808      	ldr	r0, [pc, #32]	; (80004f0 <main+0x5c>)
 80004d0:	f7ff ff18 	bl	8000304 <display_numbers>

    insertion_sort(numbers,len);
 80004d4:	6879      	ldr	r1, [r7, #4]
 80004d6:	4806      	ldr	r0, [pc, #24]	; (80004f0 <main+0x5c>)
 80004d8:	f7ff ff9b 	bl	8000412 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004dc:	4a08      	ldr	r2, [pc, #32]	; (8000500 <main+0x6c>)
 80004de:	6879      	ldr	r1, [r7, #4]
 80004e0:	4803      	ldr	r0, [pc, #12]	; (80004f0 <main+0x5c>)
 80004e2:	f7ff ff0f 	bl	8000304 <display_numbers>



    return 0;
 80004e6:	2300      	movs	r3, #0
}
 80004e8:	4618      	mov	r0, r3
 80004ea:	3708      	adds	r7, #8
 80004ec:	46bd      	mov	sp, r7
 80004ee:	bd80      	pop	{r7, pc}
 80004f0:	20000000 	.word	0x20000000
 80004f4:	0800185c 	.word	0x0800185c
 80004f8:	08001870 	.word	0x08001870
 80004fc:	08001884 	.word	0x08001884
 8000500:	08001898 	.word	0x08001898

08000504 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000504:	b480      	push	{r7}
 8000506:	af00      	add	r7, sp, #0
	return 1;
 8000508:	2301      	movs	r3, #1
}
 800050a:	4618      	mov	r0, r3
 800050c:	46bd      	mov	sp, r7
 800050e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000512:	4770      	bx	lr

08000514 <_kill>:

int _kill(int pid, int sig)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b082      	sub	sp, #8
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
 800051c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800051e:	f000 f8e1 	bl	80006e4 <__errno>
 8000522:	4603      	mov	r3, r0
 8000524:	2216      	movs	r2, #22
 8000526:	601a      	str	r2, [r3, #0]
	return -1;
 8000528:	f04f 33ff 	mov.w	r3, #4294967295
}
 800052c:	4618      	mov	r0, r3
 800052e:	3708      	adds	r7, #8
 8000530:	46bd      	mov	sp, r7
 8000532:	bd80      	pop	{r7, pc}

08000534 <_exit>:

void _exit (int status)
{
 8000534:	b580      	push	{r7, lr}
 8000536:	b082      	sub	sp, #8
 8000538:	af00      	add	r7, sp, #0
 800053a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800053c:	f04f 31ff 	mov.w	r1, #4294967295
 8000540:	6878      	ldr	r0, [r7, #4]
 8000542:	f7ff ffe7 	bl	8000514 <_kill>
	while (1) {}		/* Make sure we hang here */
 8000546:	e7fe      	b.n	8000546 <_exit+0x12>

08000548 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000548:	b580      	push	{r7, lr}
 800054a:	b086      	sub	sp, #24
 800054c:	af00      	add	r7, sp, #0
 800054e:	60f8      	str	r0, [r7, #12]
 8000550:	60b9      	str	r1, [r7, #8]
 8000552:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000554:	2300      	movs	r3, #0
 8000556:	617b      	str	r3, [r7, #20]
 8000558:	e00a      	b.n	8000570 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800055a:	f3af 8000 	nop.w
 800055e:	4601      	mov	r1, r0
 8000560:	68bb      	ldr	r3, [r7, #8]
 8000562:	1c5a      	adds	r2, r3, #1
 8000564:	60ba      	str	r2, [r7, #8]
 8000566:	b2ca      	uxtb	r2, r1
 8000568:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800056a:	697b      	ldr	r3, [r7, #20]
 800056c:	3301      	adds	r3, #1
 800056e:	617b      	str	r3, [r7, #20]
 8000570:	697a      	ldr	r2, [r7, #20]
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	429a      	cmp	r2, r3
 8000576:	dbf0      	blt.n	800055a <_read+0x12>
	}

return len;
 8000578:	687b      	ldr	r3, [r7, #4]
}
 800057a:	4618      	mov	r0, r3
 800057c:	3718      	adds	r7, #24
 800057e:	46bd      	mov	sp, r7
 8000580:	bd80      	pop	{r7, pc}

08000582 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000582:	b580      	push	{r7, lr}
 8000584:	b086      	sub	sp, #24
 8000586:	af00      	add	r7, sp, #0
 8000588:	60f8      	str	r0, [r7, #12]
 800058a:	60b9      	str	r1, [r7, #8]
 800058c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800058e:	2300      	movs	r3, #0
 8000590:	617b      	str	r3, [r7, #20]
 8000592:	e009      	b.n	80005a8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000594:	68bb      	ldr	r3, [r7, #8]
 8000596:	1c5a      	adds	r2, r3, #1
 8000598:	60ba      	str	r2, [r7, #8]
 800059a:	781b      	ldrb	r3, [r3, #0]
 800059c:	4618      	mov	r0, r3
 800059e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005a2:	697b      	ldr	r3, [r7, #20]
 80005a4:	3301      	adds	r3, #1
 80005a6:	617b      	str	r3, [r7, #20]
 80005a8:	697a      	ldr	r2, [r7, #20]
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	429a      	cmp	r2, r3
 80005ae:	dbf1      	blt.n	8000594 <_write+0x12>
	}
	return len;
 80005b0:	687b      	ldr	r3, [r7, #4]
}
 80005b2:	4618      	mov	r0, r3
 80005b4:	3718      	adds	r7, #24
 80005b6:	46bd      	mov	sp, r7
 80005b8:	bd80      	pop	{r7, pc}

080005ba <_close>:

int _close(int file)
{
 80005ba:	b480      	push	{r7}
 80005bc:	b083      	sub	sp, #12
 80005be:	af00      	add	r7, sp, #0
 80005c0:	6078      	str	r0, [r7, #4]
	return -1;
 80005c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005c6:	4618      	mov	r0, r3
 80005c8:	370c      	adds	r7, #12
 80005ca:	46bd      	mov	sp, r7
 80005cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d0:	4770      	bx	lr

080005d2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005d2:	b480      	push	{r7}
 80005d4:	b083      	sub	sp, #12
 80005d6:	af00      	add	r7, sp, #0
 80005d8:	6078      	str	r0, [r7, #4]
 80005da:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80005dc:	683b      	ldr	r3, [r7, #0]
 80005de:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005e2:	605a      	str	r2, [r3, #4]
	return 0;
 80005e4:	2300      	movs	r3, #0
}
 80005e6:	4618      	mov	r0, r3
 80005e8:	370c      	adds	r7, #12
 80005ea:	46bd      	mov	sp, r7
 80005ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f0:	4770      	bx	lr

080005f2 <_isatty>:

int _isatty(int file)
{
 80005f2:	b480      	push	{r7}
 80005f4:	b083      	sub	sp, #12
 80005f6:	af00      	add	r7, sp, #0
 80005f8:	6078      	str	r0, [r7, #4]
	return 1;
 80005fa:	2301      	movs	r3, #1
}
 80005fc:	4618      	mov	r0, r3
 80005fe:	370c      	adds	r7, #12
 8000600:	46bd      	mov	sp, r7
 8000602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000606:	4770      	bx	lr

08000608 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000608:	b480      	push	{r7}
 800060a:	b085      	sub	sp, #20
 800060c:	af00      	add	r7, sp, #0
 800060e:	60f8      	str	r0, [r7, #12]
 8000610:	60b9      	str	r1, [r7, #8]
 8000612:	607a      	str	r2, [r7, #4]
	return 0;
 8000614:	2300      	movs	r3, #0
}
 8000616:	4618      	mov	r0, r3
 8000618:	3714      	adds	r7, #20
 800061a:	46bd      	mov	sp, r7
 800061c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000620:	4770      	bx	lr
	...

08000624 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000624:	b580      	push	{r7, lr}
 8000626:	b086      	sub	sp, #24
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800062c:	4a14      	ldr	r2, [pc, #80]	; (8000680 <_sbrk+0x5c>)
 800062e:	4b15      	ldr	r3, [pc, #84]	; (8000684 <_sbrk+0x60>)
 8000630:	1ad3      	subs	r3, r2, r3
 8000632:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000634:	697b      	ldr	r3, [r7, #20]
 8000636:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000638:	4b13      	ldr	r3, [pc, #76]	; (8000688 <_sbrk+0x64>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	2b00      	cmp	r3, #0
 800063e:	d102      	bne.n	8000646 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000640:	4b11      	ldr	r3, [pc, #68]	; (8000688 <_sbrk+0x64>)
 8000642:	4a12      	ldr	r2, [pc, #72]	; (800068c <_sbrk+0x68>)
 8000644:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000646:	4b10      	ldr	r3, [pc, #64]	; (8000688 <_sbrk+0x64>)
 8000648:	681a      	ldr	r2, [r3, #0]
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	4413      	add	r3, r2
 800064e:	693a      	ldr	r2, [r7, #16]
 8000650:	429a      	cmp	r2, r3
 8000652:	d207      	bcs.n	8000664 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000654:	f000 f846 	bl	80006e4 <__errno>
 8000658:	4603      	mov	r3, r0
 800065a:	220c      	movs	r2, #12
 800065c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800065e:	f04f 33ff 	mov.w	r3, #4294967295
 8000662:	e009      	b.n	8000678 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000664:	4b08      	ldr	r3, [pc, #32]	; (8000688 <_sbrk+0x64>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800066a:	4b07      	ldr	r3, [pc, #28]	; (8000688 <_sbrk+0x64>)
 800066c:	681a      	ldr	r2, [r3, #0]
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	4413      	add	r3, r2
 8000672:	4a05      	ldr	r2, [pc, #20]	; (8000688 <_sbrk+0x64>)
 8000674:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000676:	68fb      	ldr	r3, [r7, #12]
}
 8000678:	4618      	mov	r0, r3
 800067a:	3718      	adds	r7, #24
 800067c:	46bd      	mov	sp, r7
 800067e:	bd80      	pop	{r7, pc}
 8000680:	20020000 	.word	0x20020000
 8000684:	00000400 	.word	0x00000400
 8000688:	200000c8 	.word	0x200000c8
 800068c:	200000e8 	.word	0x200000e8

08000690 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000690:	480d      	ldr	r0, [pc, #52]	; (80006c8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000692:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000694:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000698:	480c      	ldr	r0, [pc, #48]	; (80006cc <LoopForever+0x6>)
  ldr r1, =_edata
 800069a:	490d      	ldr	r1, [pc, #52]	; (80006d0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800069c:	4a0d      	ldr	r2, [pc, #52]	; (80006d4 <LoopForever+0xe>)
  movs r3, #0
 800069e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006a0:	e002      	b.n	80006a8 <LoopCopyDataInit>

080006a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006a6:	3304      	adds	r3, #4

080006a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006ac:	d3f9      	bcc.n	80006a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ae:	4a0a      	ldr	r2, [pc, #40]	; (80006d8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006b0:	4c0a      	ldr	r4, [pc, #40]	; (80006dc <LoopForever+0x16>)
  movs r3, #0
 80006b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006b4:	e001      	b.n	80006ba <LoopFillZerobss>

080006b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006b8:	3204      	adds	r2, #4

080006ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006bc:	d3fb      	bcc.n	80006b6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006be:	f000 f817 	bl	80006f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006c2:	f7ff fee7 	bl	8000494 <main>

080006c6 <LoopForever>:

LoopForever:
    b LoopForever
 80006c6:	e7fe      	b.n	80006c6 <LoopForever>
  ldr   r0, =_estack
 80006c8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006d0:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006d4:	08001a00 	.word	0x08001a00
  ldr r2, =_sbss
 80006d8:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006dc:	200000e4 	.word	0x200000e4

080006e0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006e0:	e7fe      	b.n	80006e0 <ADC_IRQHandler>
	...

080006e4 <__errno>:
 80006e4:	4b01      	ldr	r3, [pc, #4]	; (80006ec <__errno+0x8>)
 80006e6:	6818      	ldr	r0, [r3, #0]
 80006e8:	4770      	bx	lr
 80006ea:	bf00      	nop
 80006ec:	20000048 	.word	0x20000048

080006f0 <__libc_init_array>:
 80006f0:	b570      	push	{r4, r5, r6, lr}
 80006f2:	4d0d      	ldr	r5, [pc, #52]	; (8000728 <__libc_init_array+0x38>)
 80006f4:	4c0d      	ldr	r4, [pc, #52]	; (800072c <__libc_init_array+0x3c>)
 80006f6:	1b64      	subs	r4, r4, r5
 80006f8:	10a4      	asrs	r4, r4, #2
 80006fa:	2600      	movs	r6, #0
 80006fc:	42a6      	cmp	r6, r4
 80006fe:	d109      	bne.n	8000714 <__libc_init_array+0x24>
 8000700:	4d0b      	ldr	r5, [pc, #44]	; (8000730 <__libc_init_array+0x40>)
 8000702:	4c0c      	ldr	r4, [pc, #48]	; (8000734 <__libc_init_array+0x44>)
 8000704:	f001 f898 	bl	8001838 <_init>
 8000708:	1b64      	subs	r4, r4, r5
 800070a:	10a4      	asrs	r4, r4, #2
 800070c:	2600      	movs	r6, #0
 800070e:	42a6      	cmp	r6, r4
 8000710:	d105      	bne.n	800071e <__libc_init_array+0x2e>
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f855 3b04 	ldr.w	r3, [r5], #4
 8000718:	4798      	blx	r3
 800071a:	3601      	adds	r6, #1
 800071c:	e7ee      	b.n	80006fc <__libc_init_array+0xc>
 800071e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000722:	4798      	blx	r3
 8000724:	3601      	adds	r6, #1
 8000726:	e7f2      	b.n	800070e <__libc_init_array+0x1e>
 8000728:	080019f8 	.word	0x080019f8
 800072c:	080019f8 	.word	0x080019f8
 8000730:	080019f8 	.word	0x080019f8
 8000734:	080019fc 	.word	0x080019fc

08000738 <memset>:
 8000738:	4402      	add	r2, r0
 800073a:	4603      	mov	r3, r0
 800073c:	4293      	cmp	r3, r2
 800073e:	d100      	bne.n	8000742 <memset+0xa>
 8000740:	4770      	bx	lr
 8000742:	f803 1b01 	strb.w	r1, [r3], #1
 8000746:	e7f9      	b.n	800073c <memset+0x4>

08000748 <iprintf>:
 8000748:	b40f      	push	{r0, r1, r2, r3}
 800074a:	4b0a      	ldr	r3, [pc, #40]	; (8000774 <iprintf+0x2c>)
 800074c:	b513      	push	{r0, r1, r4, lr}
 800074e:	681c      	ldr	r4, [r3, #0]
 8000750:	b124      	cbz	r4, 800075c <iprintf+0x14>
 8000752:	69a3      	ldr	r3, [r4, #24]
 8000754:	b913      	cbnz	r3, 800075c <iprintf+0x14>
 8000756:	4620      	mov	r0, r4
 8000758:	f000 f8da 	bl	8000910 <__sinit>
 800075c:	ab05      	add	r3, sp, #20
 800075e:	9a04      	ldr	r2, [sp, #16]
 8000760:	68a1      	ldr	r1, [r4, #8]
 8000762:	9301      	str	r3, [sp, #4]
 8000764:	4620      	mov	r0, r4
 8000766:	f000 fa61 	bl	8000c2c <_vfiprintf_r>
 800076a:	b002      	add	sp, #8
 800076c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000770:	b004      	add	sp, #16
 8000772:	4770      	bx	lr
 8000774:	20000048 	.word	0x20000048

08000778 <putchar>:
 8000778:	4b09      	ldr	r3, [pc, #36]	; (80007a0 <putchar+0x28>)
 800077a:	b513      	push	{r0, r1, r4, lr}
 800077c:	681c      	ldr	r4, [r3, #0]
 800077e:	4601      	mov	r1, r0
 8000780:	b134      	cbz	r4, 8000790 <putchar+0x18>
 8000782:	69a3      	ldr	r3, [r4, #24]
 8000784:	b923      	cbnz	r3, 8000790 <putchar+0x18>
 8000786:	9001      	str	r0, [sp, #4]
 8000788:	4620      	mov	r0, r4
 800078a:	f000 f8c1 	bl	8000910 <__sinit>
 800078e:	9901      	ldr	r1, [sp, #4]
 8000790:	68a2      	ldr	r2, [r4, #8]
 8000792:	4620      	mov	r0, r4
 8000794:	b002      	add	sp, #8
 8000796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800079a:	f000 bd0b 	b.w	80011b4 <_putc_r>
 800079e:	bf00      	nop
 80007a0:	20000048 	.word	0x20000048

080007a4 <rand>:
 80007a4:	4b17      	ldr	r3, [pc, #92]	; (8000804 <rand+0x60>)
 80007a6:	b510      	push	{r4, lr}
 80007a8:	681c      	ldr	r4, [r3, #0]
 80007aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80007ac:	b9b3      	cbnz	r3, 80007dc <rand+0x38>
 80007ae:	2018      	movs	r0, #24
 80007b0:	f000 f960 	bl	8000a74 <malloc>
 80007b4:	63a0      	str	r0, [r4, #56]	; 0x38
 80007b6:	b928      	cbnz	r0, 80007c4 <rand+0x20>
 80007b8:	4602      	mov	r2, r0
 80007ba:	4b13      	ldr	r3, [pc, #76]	; (8000808 <rand+0x64>)
 80007bc:	4813      	ldr	r0, [pc, #76]	; (800080c <rand+0x68>)
 80007be:	214e      	movs	r1, #78	; 0x4e
 80007c0:	f000 f830 	bl	8000824 <__assert_func>
 80007c4:	4a12      	ldr	r2, [pc, #72]	; (8000810 <rand+0x6c>)
 80007c6:	4b13      	ldr	r3, [pc, #76]	; (8000814 <rand+0x70>)
 80007c8:	e9c0 2300 	strd	r2, r3, [r0]
 80007cc:	4b12      	ldr	r3, [pc, #72]	; (8000818 <rand+0x74>)
 80007ce:	6083      	str	r3, [r0, #8]
 80007d0:	230b      	movs	r3, #11
 80007d2:	8183      	strh	r3, [r0, #12]
 80007d4:	2201      	movs	r2, #1
 80007d6:	2300      	movs	r3, #0
 80007d8:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80007dc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80007de:	480f      	ldr	r0, [pc, #60]	; (800081c <rand+0x78>)
 80007e0:	690a      	ldr	r2, [r1, #16]
 80007e2:	694b      	ldr	r3, [r1, #20]
 80007e4:	4c0e      	ldr	r4, [pc, #56]	; (8000820 <rand+0x7c>)
 80007e6:	4350      	muls	r0, r2
 80007e8:	fb04 0003 	mla	r0, r4, r3, r0
 80007ec:	fba2 3404 	umull	r3, r4, r2, r4
 80007f0:	1c5a      	adds	r2, r3, #1
 80007f2:	4404      	add	r4, r0
 80007f4:	f144 0000 	adc.w	r0, r4, #0
 80007f8:	e9c1 2004 	strd	r2, r0, [r1, #16]
 80007fc:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8000800:	bd10      	pop	{r4, pc}
 8000802:	bf00      	nop
 8000804:	20000048 	.word	0x20000048
 8000808:	080018b0 	.word	0x080018b0
 800080c:	080018c7 	.word	0x080018c7
 8000810:	abcd330e 	.word	0xabcd330e
 8000814:	e66d1234 	.word	0xe66d1234
 8000818:	0005deec 	.word	0x0005deec
 800081c:	5851f42d 	.word	0x5851f42d
 8000820:	4c957f2d 	.word	0x4c957f2d

08000824 <__assert_func>:
 8000824:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000826:	4614      	mov	r4, r2
 8000828:	461a      	mov	r2, r3
 800082a:	4b09      	ldr	r3, [pc, #36]	; (8000850 <__assert_func+0x2c>)
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	4605      	mov	r5, r0
 8000830:	68d8      	ldr	r0, [r3, #12]
 8000832:	b14c      	cbz	r4, 8000848 <__assert_func+0x24>
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <__assert_func+0x30>)
 8000836:	9100      	str	r1, [sp, #0]
 8000838:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800083c:	4906      	ldr	r1, [pc, #24]	; (8000858 <__assert_func+0x34>)
 800083e:	462b      	mov	r3, r5
 8000840:	f000 f8e4 	bl	8000a0c <fiprintf>
 8000844:	f000 fe24 	bl	8001490 <abort>
 8000848:	4b04      	ldr	r3, [pc, #16]	; (800085c <__assert_func+0x38>)
 800084a:	461c      	mov	r4, r3
 800084c:	e7f3      	b.n	8000836 <__assert_func+0x12>
 800084e:	bf00      	nop
 8000850:	20000048 	.word	0x20000048
 8000854:	08001926 	.word	0x08001926
 8000858:	08001933 	.word	0x08001933
 800085c:	08001961 	.word	0x08001961

08000860 <std>:
 8000860:	2300      	movs	r3, #0
 8000862:	b510      	push	{r4, lr}
 8000864:	4604      	mov	r4, r0
 8000866:	e9c0 3300 	strd	r3, r3, [r0]
 800086a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800086e:	6083      	str	r3, [r0, #8]
 8000870:	8181      	strh	r1, [r0, #12]
 8000872:	6643      	str	r3, [r0, #100]	; 0x64
 8000874:	81c2      	strh	r2, [r0, #14]
 8000876:	6183      	str	r3, [r0, #24]
 8000878:	4619      	mov	r1, r3
 800087a:	2208      	movs	r2, #8
 800087c:	305c      	adds	r0, #92	; 0x5c
 800087e:	f7ff ff5b 	bl	8000738 <memset>
 8000882:	4b05      	ldr	r3, [pc, #20]	; (8000898 <std+0x38>)
 8000884:	6263      	str	r3, [r4, #36]	; 0x24
 8000886:	4b05      	ldr	r3, [pc, #20]	; (800089c <std+0x3c>)
 8000888:	62a3      	str	r3, [r4, #40]	; 0x28
 800088a:	4b05      	ldr	r3, [pc, #20]	; (80008a0 <std+0x40>)
 800088c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800088e:	4b05      	ldr	r3, [pc, #20]	; (80008a4 <std+0x44>)
 8000890:	6224      	str	r4, [r4, #32]
 8000892:	6323      	str	r3, [r4, #48]	; 0x30
 8000894:	bd10      	pop	{r4, pc}
 8000896:	bf00      	nop
 8000898:	08001265 	.word	0x08001265
 800089c:	08001287 	.word	0x08001287
 80008a0:	080012bf 	.word	0x080012bf
 80008a4:	080012e3 	.word	0x080012e3

080008a8 <_cleanup_r>:
 80008a8:	4901      	ldr	r1, [pc, #4]	; (80008b0 <_cleanup_r+0x8>)
 80008aa:	f000 b8c1 	b.w	8000a30 <_fwalk_reent>
 80008ae:	bf00      	nop
 80008b0:	080015cd 	.word	0x080015cd

080008b4 <__sfmoreglue>:
 80008b4:	b570      	push	{r4, r5, r6, lr}
 80008b6:	1e4a      	subs	r2, r1, #1
 80008b8:	2568      	movs	r5, #104	; 0x68
 80008ba:	4355      	muls	r5, r2
 80008bc:	460e      	mov	r6, r1
 80008be:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008c2:	f000 f92f 	bl	8000b24 <_malloc_r>
 80008c6:	4604      	mov	r4, r0
 80008c8:	b140      	cbz	r0, 80008dc <__sfmoreglue+0x28>
 80008ca:	2100      	movs	r1, #0
 80008cc:	e9c0 1600 	strd	r1, r6, [r0]
 80008d0:	300c      	adds	r0, #12
 80008d2:	60a0      	str	r0, [r4, #8]
 80008d4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008d8:	f7ff ff2e 	bl	8000738 <memset>
 80008dc:	4620      	mov	r0, r4
 80008de:	bd70      	pop	{r4, r5, r6, pc}

080008e0 <__sfp_lock_acquire>:
 80008e0:	4801      	ldr	r0, [pc, #4]	; (80008e8 <__sfp_lock_acquire+0x8>)
 80008e2:	f000 b8c5 	b.w	8000a70 <__retarget_lock_acquire_recursive>
 80008e6:	bf00      	nop
 80008e8:	200000dc 	.word	0x200000dc

080008ec <__sfp_lock_release>:
 80008ec:	4801      	ldr	r0, [pc, #4]	; (80008f4 <__sfp_lock_release+0x8>)
 80008ee:	f000 b8c0 	b.w	8000a72 <__retarget_lock_release_recursive>
 80008f2:	bf00      	nop
 80008f4:	200000dc 	.word	0x200000dc

080008f8 <__sinit_lock_acquire>:
 80008f8:	4801      	ldr	r0, [pc, #4]	; (8000900 <__sinit_lock_acquire+0x8>)
 80008fa:	f000 b8b9 	b.w	8000a70 <__retarget_lock_acquire_recursive>
 80008fe:	bf00      	nop
 8000900:	200000d7 	.word	0x200000d7

08000904 <__sinit_lock_release>:
 8000904:	4801      	ldr	r0, [pc, #4]	; (800090c <__sinit_lock_release+0x8>)
 8000906:	f000 b8b4 	b.w	8000a72 <__retarget_lock_release_recursive>
 800090a:	bf00      	nop
 800090c:	200000d7 	.word	0x200000d7

08000910 <__sinit>:
 8000910:	b510      	push	{r4, lr}
 8000912:	4604      	mov	r4, r0
 8000914:	f7ff fff0 	bl	80008f8 <__sinit_lock_acquire>
 8000918:	69a3      	ldr	r3, [r4, #24]
 800091a:	b11b      	cbz	r3, 8000924 <__sinit+0x14>
 800091c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000920:	f7ff bff0 	b.w	8000904 <__sinit_lock_release>
 8000924:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000928:	6523      	str	r3, [r4, #80]	; 0x50
 800092a:	4b13      	ldr	r3, [pc, #76]	; (8000978 <__sinit+0x68>)
 800092c:	4a13      	ldr	r2, [pc, #76]	; (800097c <__sinit+0x6c>)
 800092e:	681b      	ldr	r3, [r3, #0]
 8000930:	62a2      	str	r2, [r4, #40]	; 0x28
 8000932:	42a3      	cmp	r3, r4
 8000934:	bf04      	itt	eq
 8000936:	2301      	moveq	r3, #1
 8000938:	61a3      	streq	r3, [r4, #24]
 800093a:	4620      	mov	r0, r4
 800093c:	f000 f820 	bl	8000980 <__sfp>
 8000940:	6060      	str	r0, [r4, #4]
 8000942:	4620      	mov	r0, r4
 8000944:	f000 f81c 	bl	8000980 <__sfp>
 8000948:	60a0      	str	r0, [r4, #8]
 800094a:	4620      	mov	r0, r4
 800094c:	f000 f818 	bl	8000980 <__sfp>
 8000950:	2200      	movs	r2, #0
 8000952:	60e0      	str	r0, [r4, #12]
 8000954:	2104      	movs	r1, #4
 8000956:	6860      	ldr	r0, [r4, #4]
 8000958:	f7ff ff82 	bl	8000860 <std>
 800095c:	68a0      	ldr	r0, [r4, #8]
 800095e:	2201      	movs	r2, #1
 8000960:	2109      	movs	r1, #9
 8000962:	f7ff ff7d 	bl	8000860 <std>
 8000966:	68e0      	ldr	r0, [r4, #12]
 8000968:	2202      	movs	r2, #2
 800096a:	2112      	movs	r1, #18
 800096c:	f7ff ff78 	bl	8000860 <std>
 8000970:	2301      	movs	r3, #1
 8000972:	61a3      	str	r3, [r4, #24]
 8000974:	e7d2      	b.n	800091c <__sinit+0xc>
 8000976:	bf00      	nop
 8000978:	080018ac 	.word	0x080018ac
 800097c:	080008a9 	.word	0x080008a9

08000980 <__sfp>:
 8000980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000982:	4607      	mov	r7, r0
 8000984:	f7ff ffac 	bl	80008e0 <__sfp_lock_acquire>
 8000988:	4b1e      	ldr	r3, [pc, #120]	; (8000a04 <__sfp+0x84>)
 800098a:	681e      	ldr	r6, [r3, #0]
 800098c:	69b3      	ldr	r3, [r6, #24]
 800098e:	b913      	cbnz	r3, 8000996 <__sfp+0x16>
 8000990:	4630      	mov	r0, r6
 8000992:	f7ff ffbd 	bl	8000910 <__sinit>
 8000996:	3648      	adds	r6, #72	; 0x48
 8000998:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800099c:	3b01      	subs	r3, #1
 800099e:	d503      	bpl.n	80009a8 <__sfp+0x28>
 80009a0:	6833      	ldr	r3, [r6, #0]
 80009a2:	b30b      	cbz	r3, 80009e8 <__sfp+0x68>
 80009a4:	6836      	ldr	r6, [r6, #0]
 80009a6:	e7f7      	b.n	8000998 <__sfp+0x18>
 80009a8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009ac:	b9d5      	cbnz	r5, 80009e4 <__sfp+0x64>
 80009ae:	4b16      	ldr	r3, [pc, #88]	; (8000a08 <__sfp+0x88>)
 80009b0:	60e3      	str	r3, [r4, #12]
 80009b2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80009b6:	6665      	str	r5, [r4, #100]	; 0x64
 80009b8:	f000 f859 	bl	8000a6e <__retarget_lock_init_recursive>
 80009bc:	f7ff ff96 	bl	80008ec <__sfp_lock_release>
 80009c0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80009c4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009c8:	6025      	str	r5, [r4, #0]
 80009ca:	61a5      	str	r5, [r4, #24]
 80009cc:	2208      	movs	r2, #8
 80009ce:	4629      	mov	r1, r5
 80009d0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009d4:	f7ff feb0 	bl	8000738 <memset>
 80009d8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009dc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009e0:	4620      	mov	r0, r4
 80009e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009e4:	3468      	adds	r4, #104	; 0x68
 80009e6:	e7d9      	b.n	800099c <__sfp+0x1c>
 80009e8:	2104      	movs	r1, #4
 80009ea:	4638      	mov	r0, r7
 80009ec:	f7ff ff62 	bl	80008b4 <__sfmoreglue>
 80009f0:	4604      	mov	r4, r0
 80009f2:	6030      	str	r0, [r6, #0]
 80009f4:	2800      	cmp	r0, #0
 80009f6:	d1d5      	bne.n	80009a4 <__sfp+0x24>
 80009f8:	f7ff ff78 	bl	80008ec <__sfp_lock_release>
 80009fc:	230c      	movs	r3, #12
 80009fe:	603b      	str	r3, [r7, #0]
 8000a00:	e7ee      	b.n	80009e0 <__sfp+0x60>
 8000a02:	bf00      	nop
 8000a04:	080018ac 	.word	0x080018ac
 8000a08:	ffff0001 	.word	0xffff0001

08000a0c <fiprintf>:
 8000a0c:	b40e      	push	{r1, r2, r3}
 8000a0e:	b503      	push	{r0, r1, lr}
 8000a10:	4601      	mov	r1, r0
 8000a12:	ab03      	add	r3, sp, #12
 8000a14:	4805      	ldr	r0, [pc, #20]	; (8000a2c <fiprintf+0x20>)
 8000a16:	f853 2b04 	ldr.w	r2, [r3], #4
 8000a1a:	6800      	ldr	r0, [r0, #0]
 8000a1c:	9301      	str	r3, [sp, #4]
 8000a1e:	f000 f905 	bl	8000c2c <_vfiprintf_r>
 8000a22:	b002      	add	sp, #8
 8000a24:	f85d eb04 	ldr.w	lr, [sp], #4
 8000a28:	b003      	add	sp, #12
 8000a2a:	4770      	bx	lr
 8000a2c:	20000048 	.word	0x20000048

08000a30 <_fwalk_reent>:
 8000a30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a34:	4606      	mov	r6, r0
 8000a36:	4688      	mov	r8, r1
 8000a38:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a3c:	2700      	movs	r7, #0
 8000a3e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a42:	f1b9 0901 	subs.w	r9, r9, #1
 8000a46:	d505      	bpl.n	8000a54 <_fwalk_reent+0x24>
 8000a48:	6824      	ldr	r4, [r4, #0]
 8000a4a:	2c00      	cmp	r4, #0
 8000a4c:	d1f7      	bne.n	8000a3e <_fwalk_reent+0xe>
 8000a4e:	4638      	mov	r0, r7
 8000a50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a54:	89ab      	ldrh	r3, [r5, #12]
 8000a56:	2b01      	cmp	r3, #1
 8000a58:	d907      	bls.n	8000a6a <_fwalk_reent+0x3a>
 8000a5a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a5e:	3301      	adds	r3, #1
 8000a60:	d003      	beq.n	8000a6a <_fwalk_reent+0x3a>
 8000a62:	4629      	mov	r1, r5
 8000a64:	4630      	mov	r0, r6
 8000a66:	47c0      	blx	r8
 8000a68:	4307      	orrs	r7, r0
 8000a6a:	3568      	adds	r5, #104	; 0x68
 8000a6c:	e7e9      	b.n	8000a42 <_fwalk_reent+0x12>

08000a6e <__retarget_lock_init_recursive>:
 8000a6e:	4770      	bx	lr

08000a70 <__retarget_lock_acquire_recursive>:
 8000a70:	4770      	bx	lr

08000a72 <__retarget_lock_release_recursive>:
 8000a72:	4770      	bx	lr

08000a74 <malloc>:
 8000a74:	4b02      	ldr	r3, [pc, #8]	; (8000a80 <malloc+0xc>)
 8000a76:	4601      	mov	r1, r0
 8000a78:	6818      	ldr	r0, [r3, #0]
 8000a7a:	f000 b853 	b.w	8000b24 <_malloc_r>
 8000a7e:	bf00      	nop
 8000a80:	20000048 	.word	0x20000048

08000a84 <_free_r>:
 8000a84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000a86:	2900      	cmp	r1, #0
 8000a88:	d048      	beq.n	8000b1c <_free_r+0x98>
 8000a8a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a8e:	9001      	str	r0, [sp, #4]
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	f1a1 0404 	sub.w	r4, r1, #4
 8000a96:	bfb8      	it	lt
 8000a98:	18e4      	addlt	r4, r4, r3
 8000a9a:	f000 fe49 	bl	8001730 <__malloc_lock>
 8000a9e:	4a20      	ldr	r2, [pc, #128]	; (8000b20 <_free_r+0x9c>)
 8000aa0:	9801      	ldr	r0, [sp, #4]
 8000aa2:	6813      	ldr	r3, [r2, #0]
 8000aa4:	4615      	mov	r5, r2
 8000aa6:	b933      	cbnz	r3, 8000ab6 <_free_r+0x32>
 8000aa8:	6063      	str	r3, [r4, #4]
 8000aaa:	6014      	str	r4, [r2, #0]
 8000aac:	b003      	add	sp, #12
 8000aae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000ab2:	f000 be43 	b.w	800173c <__malloc_unlock>
 8000ab6:	42a3      	cmp	r3, r4
 8000ab8:	d90b      	bls.n	8000ad2 <_free_r+0x4e>
 8000aba:	6821      	ldr	r1, [r4, #0]
 8000abc:	1862      	adds	r2, r4, r1
 8000abe:	4293      	cmp	r3, r2
 8000ac0:	bf04      	itt	eq
 8000ac2:	681a      	ldreq	r2, [r3, #0]
 8000ac4:	685b      	ldreq	r3, [r3, #4]
 8000ac6:	6063      	str	r3, [r4, #4]
 8000ac8:	bf04      	itt	eq
 8000aca:	1852      	addeq	r2, r2, r1
 8000acc:	6022      	streq	r2, [r4, #0]
 8000ace:	602c      	str	r4, [r5, #0]
 8000ad0:	e7ec      	b.n	8000aac <_free_r+0x28>
 8000ad2:	461a      	mov	r2, r3
 8000ad4:	685b      	ldr	r3, [r3, #4]
 8000ad6:	b10b      	cbz	r3, 8000adc <_free_r+0x58>
 8000ad8:	42a3      	cmp	r3, r4
 8000ada:	d9fa      	bls.n	8000ad2 <_free_r+0x4e>
 8000adc:	6811      	ldr	r1, [r2, #0]
 8000ade:	1855      	adds	r5, r2, r1
 8000ae0:	42a5      	cmp	r5, r4
 8000ae2:	d10b      	bne.n	8000afc <_free_r+0x78>
 8000ae4:	6824      	ldr	r4, [r4, #0]
 8000ae6:	4421      	add	r1, r4
 8000ae8:	1854      	adds	r4, r2, r1
 8000aea:	42a3      	cmp	r3, r4
 8000aec:	6011      	str	r1, [r2, #0]
 8000aee:	d1dd      	bne.n	8000aac <_free_r+0x28>
 8000af0:	681c      	ldr	r4, [r3, #0]
 8000af2:	685b      	ldr	r3, [r3, #4]
 8000af4:	6053      	str	r3, [r2, #4]
 8000af6:	4421      	add	r1, r4
 8000af8:	6011      	str	r1, [r2, #0]
 8000afa:	e7d7      	b.n	8000aac <_free_r+0x28>
 8000afc:	d902      	bls.n	8000b04 <_free_r+0x80>
 8000afe:	230c      	movs	r3, #12
 8000b00:	6003      	str	r3, [r0, #0]
 8000b02:	e7d3      	b.n	8000aac <_free_r+0x28>
 8000b04:	6825      	ldr	r5, [r4, #0]
 8000b06:	1961      	adds	r1, r4, r5
 8000b08:	428b      	cmp	r3, r1
 8000b0a:	bf04      	itt	eq
 8000b0c:	6819      	ldreq	r1, [r3, #0]
 8000b0e:	685b      	ldreq	r3, [r3, #4]
 8000b10:	6063      	str	r3, [r4, #4]
 8000b12:	bf04      	itt	eq
 8000b14:	1949      	addeq	r1, r1, r5
 8000b16:	6021      	streq	r1, [r4, #0]
 8000b18:	6054      	str	r4, [r2, #4]
 8000b1a:	e7c7      	b.n	8000aac <_free_r+0x28>
 8000b1c:	b003      	add	sp, #12
 8000b1e:	bd30      	pop	{r4, r5, pc}
 8000b20:	200000cc 	.word	0x200000cc

08000b24 <_malloc_r>:
 8000b24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b26:	1ccd      	adds	r5, r1, #3
 8000b28:	f025 0503 	bic.w	r5, r5, #3
 8000b2c:	3508      	adds	r5, #8
 8000b2e:	2d0c      	cmp	r5, #12
 8000b30:	bf38      	it	cc
 8000b32:	250c      	movcc	r5, #12
 8000b34:	2d00      	cmp	r5, #0
 8000b36:	4606      	mov	r6, r0
 8000b38:	db01      	blt.n	8000b3e <_malloc_r+0x1a>
 8000b3a:	42a9      	cmp	r1, r5
 8000b3c:	d903      	bls.n	8000b46 <_malloc_r+0x22>
 8000b3e:	230c      	movs	r3, #12
 8000b40:	6033      	str	r3, [r6, #0]
 8000b42:	2000      	movs	r0, #0
 8000b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b46:	f000 fdf3 	bl	8001730 <__malloc_lock>
 8000b4a:	4921      	ldr	r1, [pc, #132]	; (8000bd0 <_malloc_r+0xac>)
 8000b4c:	680a      	ldr	r2, [r1, #0]
 8000b4e:	4614      	mov	r4, r2
 8000b50:	b99c      	cbnz	r4, 8000b7a <_malloc_r+0x56>
 8000b52:	4f20      	ldr	r7, [pc, #128]	; (8000bd4 <_malloc_r+0xb0>)
 8000b54:	683b      	ldr	r3, [r7, #0]
 8000b56:	b923      	cbnz	r3, 8000b62 <_malloc_r+0x3e>
 8000b58:	4621      	mov	r1, r4
 8000b5a:	4630      	mov	r0, r6
 8000b5c:	f000 fb72 	bl	8001244 <_sbrk_r>
 8000b60:	6038      	str	r0, [r7, #0]
 8000b62:	4629      	mov	r1, r5
 8000b64:	4630      	mov	r0, r6
 8000b66:	f000 fb6d 	bl	8001244 <_sbrk_r>
 8000b6a:	1c43      	adds	r3, r0, #1
 8000b6c:	d123      	bne.n	8000bb6 <_malloc_r+0x92>
 8000b6e:	230c      	movs	r3, #12
 8000b70:	6033      	str	r3, [r6, #0]
 8000b72:	4630      	mov	r0, r6
 8000b74:	f000 fde2 	bl	800173c <__malloc_unlock>
 8000b78:	e7e3      	b.n	8000b42 <_malloc_r+0x1e>
 8000b7a:	6823      	ldr	r3, [r4, #0]
 8000b7c:	1b5b      	subs	r3, r3, r5
 8000b7e:	d417      	bmi.n	8000bb0 <_malloc_r+0x8c>
 8000b80:	2b0b      	cmp	r3, #11
 8000b82:	d903      	bls.n	8000b8c <_malloc_r+0x68>
 8000b84:	6023      	str	r3, [r4, #0]
 8000b86:	441c      	add	r4, r3
 8000b88:	6025      	str	r5, [r4, #0]
 8000b8a:	e004      	b.n	8000b96 <_malloc_r+0x72>
 8000b8c:	6863      	ldr	r3, [r4, #4]
 8000b8e:	42a2      	cmp	r2, r4
 8000b90:	bf0c      	ite	eq
 8000b92:	600b      	streq	r3, [r1, #0]
 8000b94:	6053      	strne	r3, [r2, #4]
 8000b96:	4630      	mov	r0, r6
 8000b98:	f000 fdd0 	bl	800173c <__malloc_unlock>
 8000b9c:	f104 000b 	add.w	r0, r4, #11
 8000ba0:	1d23      	adds	r3, r4, #4
 8000ba2:	f020 0007 	bic.w	r0, r0, #7
 8000ba6:	1ac2      	subs	r2, r0, r3
 8000ba8:	d0cc      	beq.n	8000b44 <_malloc_r+0x20>
 8000baa:	1a1b      	subs	r3, r3, r0
 8000bac:	50a3      	str	r3, [r4, r2]
 8000bae:	e7c9      	b.n	8000b44 <_malloc_r+0x20>
 8000bb0:	4622      	mov	r2, r4
 8000bb2:	6864      	ldr	r4, [r4, #4]
 8000bb4:	e7cc      	b.n	8000b50 <_malloc_r+0x2c>
 8000bb6:	1cc4      	adds	r4, r0, #3
 8000bb8:	f024 0403 	bic.w	r4, r4, #3
 8000bbc:	42a0      	cmp	r0, r4
 8000bbe:	d0e3      	beq.n	8000b88 <_malloc_r+0x64>
 8000bc0:	1a21      	subs	r1, r4, r0
 8000bc2:	4630      	mov	r0, r6
 8000bc4:	f000 fb3e 	bl	8001244 <_sbrk_r>
 8000bc8:	3001      	adds	r0, #1
 8000bca:	d1dd      	bne.n	8000b88 <_malloc_r+0x64>
 8000bcc:	e7cf      	b.n	8000b6e <_malloc_r+0x4a>
 8000bce:	bf00      	nop
 8000bd0:	200000cc 	.word	0x200000cc
 8000bd4:	200000d0 	.word	0x200000d0

08000bd8 <__sfputc_r>:
 8000bd8:	6893      	ldr	r3, [r2, #8]
 8000bda:	3b01      	subs	r3, #1
 8000bdc:	2b00      	cmp	r3, #0
 8000bde:	b410      	push	{r4}
 8000be0:	6093      	str	r3, [r2, #8]
 8000be2:	da08      	bge.n	8000bf6 <__sfputc_r+0x1e>
 8000be4:	6994      	ldr	r4, [r2, #24]
 8000be6:	42a3      	cmp	r3, r4
 8000be8:	db01      	blt.n	8000bee <__sfputc_r+0x16>
 8000bea:	290a      	cmp	r1, #10
 8000bec:	d103      	bne.n	8000bf6 <__sfputc_r+0x1e>
 8000bee:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bf2:	f000 bb7b 	b.w	80012ec <__swbuf_r>
 8000bf6:	6813      	ldr	r3, [r2, #0]
 8000bf8:	1c58      	adds	r0, r3, #1
 8000bfa:	6010      	str	r0, [r2, #0]
 8000bfc:	7019      	strb	r1, [r3, #0]
 8000bfe:	4608      	mov	r0, r1
 8000c00:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c04:	4770      	bx	lr

08000c06 <__sfputs_r>:
 8000c06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c08:	4606      	mov	r6, r0
 8000c0a:	460f      	mov	r7, r1
 8000c0c:	4614      	mov	r4, r2
 8000c0e:	18d5      	adds	r5, r2, r3
 8000c10:	42ac      	cmp	r4, r5
 8000c12:	d101      	bne.n	8000c18 <__sfputs_r+0x12>
 8000c14:	2000      	movs	r0, #0
 8000c16:	e007      	b.n	8000c28 <__sfputs_r+0x22>
 8000c18:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c1c:	463a      	mov	r2, r7
 8000c1e:	4630      	mov	r0, r6
 8000c20:	f7ff ffda 	bl	8000bd8 <__sfputc_r>
 8000c24:	1c43      	adds	r3, r0, #1
 8000c26:	d1f3      	bne.n	8000c10 <__sfputs_r+0xa>
 8000c28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c2c <_vfiprintf_r>:
 8000c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c30:	460d      	mov	r5, r1
 8000c32:	b09d      	sub	sp, #116	; 0x74
 8000c34:	4614      	mov	r4, r2
 8000c36:	4698      	mov	r8, r3
 8000c38:	4606      	mov	r6, r0
 8000c3a:	b118      	cbz	r0, 8000c44 <_vfiprintf_r+0x18>
 8000c3c:	6983      	ldr	r3, [r0, #24]
 8000c3e:	b90b      	cbnz	r3, 8000c44 <_vfiprintf_r+0x18>
 8000c40:	f7ff fe66 	bl	8000910 <__sinit>
 8000c44:	4b89      	ldr	r3, [pc, #548]	; (8000e6c <_vfiprintf_r+0x240>)
 8000c46:	429d      	cmp	r5, r3
 8000c48:	d11b      	bne.n	8000c82 <_vfiprintf_r+0x56>
 8000c4a:	6875      	ldr	r5, [r6, #4]
 8000c4c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c4e:	07d9      	lsls	r1, r3, #31
 8000c50:	d405      	bmi.n	8000c5e <_vfiprintf_r+0x32>
 8000c52:	89ab      	ldrh	r3, [r5, #12]
 8000c54:	059a      	lsls	r2, r3, #22
 8000c56:	d402      	bmi.n	8000c5e <_vfiprintf_r+0x32>
 8000c58:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c5a:	f7ff ff09 	bl	8000a70 <__retarget_lock_acquire_recursive>
 8000c5e:	89ab      	ldrh	r3, [r5, #12]
 8000c60:	071b      	lsls	r3, r3, #28
 8000c62:	d501      	bpl.n	8000c68 <_vfiprintf_r+0x3c>
 8000c64:	692b      	ldr	r3, [r5, #16]
 8000c66:	b9eb      	cbnz	r3, 8000ca4 <_vfiprintf_r+0x78>
 8000c68:	4629      	mov	r1, r5
 8000c6a:	4630      	mov	r0, r6
 8000c6c:	f000 fba2 	bl	80013b4 <__swsetup_r>
 8000c70:	b1c0      	cbz	r0, 8000ca4 <_vfiprintf_r+0x78>
 8000c72:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c74:	07dc      	lsls	r4, r3, #31
 8000c76:	d50e      	bpl.n	8000c96 <_vfiprintf_r+0x6a>
 8000c78:	f04f 30ff 	mov.w	r0, #4294967295
 8000c7c:	b01d      	add	sp, #116	; 0x74
 8000c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c82:	4b7b      	ldr	r3, [pc, #492]	; (8000e70 <_vfiprintf_r+0x244>)
 8000c84:	429d      	cmp	r5, r3
 8000c86:	d101      	bne.n	8000c8c <_vfiprintf_r+0x60>
 8000c88:	68b5      	ldr	r5, [r6, #8]
 8000c8a:	e7df      	b.n	8000c4c <_vfiprintf_r+0x20>
 8000c8c:	4b79      	ldr	r3, [pc, #484]	; (8000e74 <_vfiprintf_r+0x248>)
 8000c8e:	429d      	cmp	r5, r3
 8000c90:	bf08      	it	eq
 8000c92:	68f5      	ldreq	r5, [r6, #12]
 8000c94:	e7da      	b.n	8000c4c <_vfiprintf_r+0x20>
 8000c96:	89ab      	ldrh	r3, [r5, #12]
 8000c98:	0598      	lsls	r0, r3, #22
 8000c9a:	d4ed      	bmi.n	8000c78 <_vfiprintf_r+0x4c>
 8000c9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c9e:	f7ff fee8 	bl	8000a72 <__retarget_lock_release_recursive>
 8000ca2:	e7e9      	b.n	8000c78 <_vfiprintf_r+0x4c>
 8000ca4:	2300      	movs	r3, #0
 8000ca6:	9309      	str	r3, [sp, #36]	; 0x24
 8000ca8:	2320      	movs	r3, #32
 8000caa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000cae:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cb2:	2330      	movs	r3, #48	; 0x30
 8000cb4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000e78 <_vfiprintf_r+0x24c>
 8000cb8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000cbc:	f04f 0901 	mov.w	r9, #1
 8000cc0:	4623      	mov	r3, r4
 8000cc2:	469a      	mov	sl, r3
 8000cc4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cc8:	b10a      	cbz	r2, 8000cce <_vfiprintf_r+0xa2>
 8000cca:	2a25      	cmp	r2, #37	; 0x25
 8000ccc:	d1f9      	bne.n	8000cc2 <_vfiprintf_r+0x96>
 8000cce:	ebba 0b04 	subs.w	fp, sl, r4
 8000cd2:	d00b      	beq.n	8000cec <_vfiprintf_r+0xc0>
 8000cd4:	465b      	mov	r3, fp
 8000cd6:	4622      	mov	r2, r4
 8000cd8:	4629      	mov	r1, r5
 8000cda:	4630      	mov	r0, r6
 8000cdc:	f7ff ff93 	bl	8000c06 <__sfputs_r>
 8000ce0:	3001      	adds	r0, #1
 8000ce2:	f000 80aa 	beq.w	8000e3a <_vfiprintf_r+0x20e>
 8000ce6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ce8:	445a      	add	r2, fp
 8000cea:	9209      	str	r2, [sp, #36]	; 0x24
 8000cec:	f89a 3000 	ldrb.w	r3, [sl]
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	f000 80a2 	beq.w	8000e3a <_vfiprintf_r+0x20e>
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	f04f 32ff 	mov.w	r2, #4294967295
 8000cfc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d00:	f10a 0a01 	add.w	sl, sl, #1
 8000d04:	9304      	str	r3, [sp, #16]
 8000d06:	9307      	str	r3, [sp, #28]
 8000d08:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d0c:	931a      	str	r3, [sp, #104]	; 0x68
 8000d0e:	4654      	mov	r4, sl
 8000d10:	2205      	movs	r2, #5
 8000d12:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d16:	4858      	ldr	r0, [pc, #352]	; (8000e78 <_vfiprintf_r+0x24c>)
 8000d18:	f7ff fa7a 	bl	8000210 <memchr>
 8000d1c:	9a04      	ldr	r2, [sp, #16]
 8000d1e:	b9d8      	cbnz	r0, 8000d58 <_vfiprintf_r+0x12c>
 8000d20:	06d1      	lsls	r1, r2, #27
 8000d22:	bf44      	itt	mi
 8000d24:	2320      	movmi	r3, #32
 8000d26:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d2a:	0713      	lsls	r3, r2, #28
 8000d2c:	bf44      	itt	mi
 8000d2e:	232b      	movmi	r3, #43	; 0x2b
 8000d30:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d34:	f89a 3000 	ldrb.w	r3, [sl]
 8000d38:	2b2a      	cmp	r3, #42	; 0x2a
 8000d3a:	d015      	beq.n	8000d68 <_vfiprintf_r+0x13c>
 8000d3c:	9a07      	ldr	r2, [sp, #28]
 8000d3e:	4654      	mov	r4, sl
 8000d40:	2000      	movs	r0, #0
 8000d42:	f04f 0c0a 	mov.w	ip, #10
 8000d46:	4621      	mov	r1, r4
 8000d48:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d4c:	3b30      	subs	r3, #48	; 0x30
 8000d4e:	2b09      	cmp	r3, #9
 8000d50:	d94e      	bls.n	8000df0 <_vfiprintf_r+0x1c4>
 8000d52:	b1b0      	cbz	r0, 8000d82 <_vfiprintf_r+0x156>
 8000d54:	9207      	str	r2, [sp, #28]
 8000d56:	e014      	b.n	8000d82 <_vfiprintf_r+0x156>
 8000d58:	eba0 0308 	sub.w	r3, r0, r8
 8000d5c:	fa09 f303 	lsl.w	r3, r9, r3
 8000d60:	4313      	orrs	r3, r2
 8000d62:	9304      	str	r3, [sp, #16]
 8000d64:	46a2      	mov	sl, r4
 8000d66:	e7d2      	b.n	8000d0e <_vfiprintf_r+0xe2>
 8000d68:	9b03      	ldr	r3, [sp, #12]
 8000d6a:	1d19      	adds	r1, r3, #4
 8000d6c:	681b      	ldr	r3, [r3, #0]
 8000d6e:	9103      	str	r1, [sp, #12]
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	bfbb      	ittet	lt
 8000d74:	425b      	neglt	r3, r3
 8000d76:	f042 0202 	orrlt.w	r2, r2, #2
 8000d7a:	9307      	strge	r3, [sp, #28]
 8000d7c:	9307      	strlt	r3, [sp, #28]
 8000d7e:	bfb8      	it	lt
 8000d80:	9204      	strlt	r2, [sp, #16]
 8000d82:	7823      	ldrb	r3, [r4, #0]
 8000d84:	2b2e      	cmp	r3, #46	; 0x2e
 8000d86:	d10c      	bne.n	8000da2 <_vfiprintf_r+0x176>
 8000d88:	7863      	ldrb	r3, [r4, #1]
 8000d8a:	2b2a      	cmp	r3, #42	; 0x2a
 8000d8c:	d135      	bne.n	8000dfa <_vfiprintf_r+0x1ce>
 8000d8e:	9b03      	ldr	r3, [sp, #12]
 8000d90:	1d1a      	adds	r2, r3, #4
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	9203      	str	r2, [sp, #12]
 8000d96:	2b00      	cmp	r3, #0
 8000d98:	bfb8      	it	lt
 8000d9a:	f04f 33ff 	movlt.w	r3, #4294967295
 8000d9e:	3402      	adds	r4, #2
 8000da0:	9305      	str	r3, [sp, #20]
 8000da2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000e88 <_vfiprintf_r+0x25c>
 8000da6:	7821      	ldrb	r1, [r4, #0]
 8000da8:	2203      	movs	r2, #3
 8000daa:	4650      	mov	r0, sl
 8000dac:	f7ff fa30 	bl	8000210 <memchr>
 8000db0:	b140      	cbz	r0, 8000dc4 <_vfiprintf_r+0x198>
 8000db2:	2340      	movs	r3, #64	; 0x40
 8000db4:	eba0 000a 	sub.w	r0, r0, sl
 8000db8:	fa03 f000 	lsl.w	r0, r3, r0
 8000dbc:	9b04      	ldr	r3, [sp, #16]
 8000dbe:	4303      	orrs	r3, r0
 8000dc0:	3401      	adds	r4, #1
 8000dc2:	9304      	str	r3, [sp, #16]
 8000dc4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dc8:	482c      	ldr	r0, [pc, #176]	; (8000e7c <_vfiprintf_r+0x250>)
 8000dca:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000dce:	2206      	movs	r2, #6
 8000dd0:	f7ff fa1e 	bl	8000210 <memchr>
 8000dd4:	2800      	cmp	r0, #0
 8000dd6:	d03f      	beq.n	8000e58 <_vfiprintf_r+0x22c>
 8000dd8:	4b29      	ldr	r3, [pc, #164]	; (8000e80 <_vfiprintf_r+0x254>)
 8000dda:	bb1b      	cbnz	r3, 8000e24 <_vfiprintf_r+0x1f8>
 8000ddc:	9b03      	ldr	r3, [sp, #12]
 8000dde:	3307      	adds	r3, #7
 8000de0:	f023 0307 	bic.w	r3, r3, #7
 8000de4:	3308      	adds	r3, #8
 8000de6:	9303      	str	r3, [sp, #12]
 8000de8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000dea:	443b      	add	r3, r7
 8000dec:	9309      	str	r3, [sp, #36]	; 0x24
 8000dee:	e767      	b.n	8000cc0 <_vfiprintf_r+0x94>
 8000df0:	fb0c 3202 	mla	r2, ip, r2, r3
 8000df4:	460c      	mov	r4, r1
 8000df6:	2001      	movs	r0, #1
 8000df8:	e7a5      	b.n	8000d46 <_vfiprintf_r+0x11a>
 8000dfa:	2300      	movs	r3, #0
 8000dfc:	3401      	adds	r4, #1
 8000dfe:	9305      	str	r3, [sp, #20]
 8000e00:	4619      	mov	r1, r3
 8000e02:	f04f 0c0a 	mov.w	ip, #10
 8000e06:	4620      	mov	r0, r4
 8000e08:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e0c:	3a30      	subs	r2, #48	; 0x30
 8000e0e:	2a09      	cmp	r2, #9
 8000e10:	d903      	bls.n	8000e1a <_vfiprintf_r+0x1ee>
 8000e12:	2b00      	cmp	r3, #0
 8000e14:	d0c5      	beq.n	8000da2 <_vfiprintf_r+0x176>
 8000e16:	9105      	str	r1, [sp, #20]
 8000e18:	e7c3      	b.n	8000da2 <_vfiprintf_r+0x176>
 8000e1a:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e1e:	4604      	mov	r4, r0
 8000e20:	2301      	movs	r3, #1
 8000e22:	e7f0      	b.n	8000e06 <_vfiprintf_r+0x1da>
 8000e24:	ab03      	add	r3, sp, #12
 8000e26:	9300      	str	r3, [sp, #0]
 8000e28:	462a      	mov	r2, r5
 8000e2a:	4b16      	ldr	r3, [pc, #88]	; (8000e84 <_vfiprintf_r+0x258>)
 8000e2c:	a904      	add	r1, sp, #16
 8000e2e:	4630      	mov	r0, r6
 8000e30:	f3af 8000 	nop.w
 8000e34:	4607      	mov	r7, r0
 8000e36:	1c78      	adds	r0, r7, #1
 8000e38:	d1d6      	bne.n	8000de8 <_vfiprintf_r+0x1bc>
 8000e3a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e3c:	07d9      	lsls	r1, r3, #31
 8000e3e:	d405      	bmi.n	8000e4c <_vfiprintf_r+0x220>
 8000e40:	89ab      	ldrh	r3, [r5, #12]
 8000e42:	059a      	lsls	r2, r3, #22
 8000e44:	d402      	bmi.n	8000e4c <_vfiprintf_r+0x220>
 8000e46:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e48:	f7ff fe13 	bl	8000a72 <__retarget_lock_release_recursive>
 8000e4c:	89ab      	ldrh	r3, [r5, #12]
 8000e4e:	065b      	lsls	r3, r3, #25
 8000e50:	f53f af12 	bmi.w	8000c78 <_vfiprintf_r+0x4c>
 8000e54:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e56:	e711      	b.n	8000c7c <_vfiprintf_r+0x50>
 8000e58:	ab03      	add	r3, sp, #12
 8000e5a:	9300      	str	r3, [sp, #0]
 8000e5c:	462a      	mov	r2, r5
 8000e5e:	4b09      	ldr	r3, [pc, #36]	; (8000e84 <_vfiprintf_r+0x258>)
 8000e60:	a904      	add	r1, sp, #16
 8000e62:	4630      	mov	r0, r6
 8000e64:	f000 f880 	bl	8000f68 <_printf_i>
 8000e68:	e7e4      	b.n	8000e34 <_vfiprintf_r+0x208>
 8000e6a:	bf00      	nop
 8000e6c:	08001984 	.word	0x08001984
 8000e70:	080019a4 	.word	0x080019a4
 8000e74:	08001964 	.word	0x08001964
 8000e78:	080019c4 	.word	0x080019c4
 8000e7c:	080019ce 	.word	0x080019ce
 8000e80:	00000000 	.word	0x00000000
 8000e84:	08000c07 	.word	0x08000c07
 8000e88:	080019ca 	.word	0x080019ca

08000e8c <_printf_common>:
 8000e8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e90:	4616      	mov	r6, r2
 8000e92:	4699      	mov	r9, r3
 8000e94:	688a      	ldr	r2, [r1, #8]
 8000e96:	690b      	ldr	r3, [r1, #16]
 8000e98:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000e9c:	4293      	cmp	r3, r2
 8000e9e:	bfb8      	it	lt
 8000ea0:	4613      	movlt	r3, r2
 8000ea2:	6033      	str	r3, [r6, #0]
 8000ea4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ea8:	4607      	mov	r7, r0
 8000eaa:	460c      	mov	r4, r1
 8000eac:	b10a      	cbz	r2, 8000eb2 <_printf_common+0x26>
 8000eae:	3301      	adds	r3, #1
 8000eb0:	6033      	str	r3, [r6, #0]
 8000eb2:	6823      	ldr	r3, [r4, #0]
 8000eb4:	0699      	lsls	r1, r3, #26
 8000eb6:	bf42      	ittt	mi
 8000eb8:	6833      	ldrmi	r3, [r6, #0]
 8000eba:	3302      	addmi	r3, #2
 8000ebc:	6033      	strmi	r3, [r6, #0]
 8000ebe:	6825      	ldr	r5, [r4, #0]
 8000ec0:	f015 0506 	ands.w	r5, r5, #6
 8000ec4:	d106      	bne.n	8000ed4 <_printf_common+0x48>
 8000ec6:	f104 0a19 	add.w	sl, r4, #25
 8000eca:	68e3      	ldr	r3, [r4, #12]
 8000ecc:	6832      	ldr	r2, [r6, #0]
 8000ece:	1a9b      	subs	r3, r3, r2
 8000ed0:	42ab      	cmp	r3, r5
 8000ed2:	dc26      	bgt.n	8000f22 <_printf_common+0x96>
 8000ed4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ed8:	1e13      	subs	r3, r2, #0
 8000eda:	6822      	ldr	r2, [r4, #0]
 8000edc:	bf18      	it	ne
 8000ede:	2301      	movne	r3, #1
 8000ee0:	0692      	lsls	r2, r2, #26
 8000ee2:	d42b      	bmi.n	8000f3c <_printf_common+0xb0>
 8000ee4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ee8:	4649      	mov	r1, r9
 8000eea:	4638      	mov	r0, r7
 8000eec:	47c0      	blx	r8
 8000eee:	3001      	adds	r0, #1
 8000ef0:	d01e      	beq.n	8000f30 <_printf_common+0xa4>
 8000ef2:	6823      	ldr	r3, [r4, #0]
 8000ef4:	68e5      	ldr	r5, [r4, #12]
 8000ef6:	6832      	ldr	r2, [r6, #0]
 8000ef8:	f003 0306 	and.w	r3, r3, #6
 8000efc:	2b04      	cmp	r3, #4
 8000efe:	bf08      	it	eq
 8000f00:	1aad      	subeq	r5, r5, r2
 8000f02:	68a3      	ldr	r3, [r4, #8]
 8000f04:	6922      	ldr	r2, [r4, #16]
 8000f06:	bf0c      	ite	eq
 8000f08:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f0c:	2500      	movne	r5, #0
 8000f0e:	4293      	cmp	r3, r2
 8000f10:	bfc4      	itt	gt
 8000f12:	1a9b      	subgt	r3, r3, r2
 8000f14:	18ed      	addgt	r5, r5, r3
 8000f16:	2600      	movs	r6, #0
 8000f18:	341a      	adds	r4, #26
 8000f1a:	42b5      	cmp	r5, r6
 8000f1c:	d11a      	bne.n	8000f54 <_printf_common+0xc8>
 8000f1e:	2000      	movs	r0, #0
 8000f20:	e008      	b.n	8000f34 <_printf_common+0xa8>
 8000f22:	2301      	movs	r3, #1
 8000f24:	4652      	mov	r2, sl
 8000f26:	4649      	mov	r1, r9
 8000f28:	4638      	mov	r0, r7
 8000f2a:	47c0      	blx	r8
 8000f2c:	3001      	adds	r0, #1
 8000f2e:	d103      	bne.n	8000f38 <_printf_common+0xac>
 8000f30:	f04f 30ff 	mov.w	r0, #4294967295
 8000f34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f38:	3501      	adds	r5, #1
 8000f3a:	e7c6      	b.n	8000eca <_printf_common+0x3e>
 8000f3c:	18e1      	adds	r1, r4, r3
 8000f3e:	1c5a      	adds	r2, r3, #1
 8000f40:	2030      	movs	r0, #48	; 0x30
 8000f42:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f46:	4422      	add	r2, r4
 8000f48:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f4c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f50:	3302      	adds	r3, #2
 8000f52:	e7c7      	b.n	8000ee4 <_printf_common+0x58>
 8000f54:	2301      	movs	r3, #1
 8000f56:	4622      	mov	r2, r4
 8000f58:	4649      	mov	r1, r9
 8000f5a:	4638      	mov	r0, r7
 8000f5c:	47c0      	blx	r8
 8000f5e:	3001      	adds	r0, #1
 8000f60:	d0e6      	beq.n	8000f30 <_printf_common+0xa4>
 8000f62:	3601      	adds	r6, #1
 8000f64:	e7d9      	b.n	8000f1a <_printf_common+0x8e>
	...

08000f68 <_printf_i>:
 8000f68:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f6c:	460c      	mov	r4, r1
 8000f6e:	4691      	mov	r9, r2
 8000f70:	7e27      	ldrb	r7, [r4, #24]
 8000f72:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000f74:	2f78      	cmp	r7, #120	; 0x78
 8000f76:	4680      	mov	r8, r0
 8000f78:	469a      	mov	sl, r3
 8000f7a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f7e:	d807      	bhi.n	8000f90 <_printf_i+0x28>
 8000f80:	2f62      	cmp	r7, #98	; 0x62
 8000f82:	d80a      	bhi.n	8000f9a <_printf_i+0x32>
 8000f84:	2f00      	cmp	r7, #0
 8000f86:	f000 80d8 	beq.w	800113a <_printf_i+0x1d2>
 8000f8a:	2f58      	cmp	r7, #88	; 0x58
 8000f8c:	f000 80a3 	beq.w	80010d6 <_printf_i+0x16e>
 8000f90:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000f94:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000f98:	e03a      	b.n	8001010 <_printf_i+0xa8>
 8000f9a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000f9e:	2b15      	cmp	r3, #21
 8000fa0:	d8f6      	bhi.n	8000f90 <_printf_i+0x28>
 8000fa2:	a001      	add	r0, pc, #4	; (adr r0, 8000fa8 <_printf_i+0x40>)
 8000fa4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000fa8:	08001001 	.word	0x08001001
 8000fac:	08001015 	.word	0x08001015
 8000fb0:	08000f91 	.word	0x08000f91
 8000fb4:	08000f91 	.word	0x08000f91
 8000fb8:	08000f91 	.word	0x08000f91
 8000fbc:	08000f91 	.word	0x08000f91
 8000fc0:	08001015 	.word	0x08001015
 8000fc4:	08000f91 	.word	0x08000f91
 8000fc8:	08000f91 	.word	0x08000f91
 8000fcc:	08000f91 	.word	0x08000f91
 8000fd0:	08000f91 	.word	0x08000f91
 8000fd4:	08001121 	.word	0x08001121
 8000fd8:	08001045 	.word	0x08001045
 8000fdc:	08001103 	.word	0x08001103
 8000fe0:	08000f91 	.word	0x08000f91
 8000fe4:	08000f91 	.word	0x08000f91
 8000fe8:	08001143 	.word	0x08001143
 8000fec:	08000f91 	.word	0x08000f91
 8000ff0:	08001045 	.word	0x08001045
 8000ff4:	08000f91 	.word	0x08000f91
 8000ff8:	08000f91 	.word	0x08000f91
 8000ffc:	0800110b 	.word	0x0800110b
 8001000:	680b      	ldr	r3, [r1, #0]
 8001002:	1d1a      	adds	r2, r3, #4
 8001004:	681b      	ldr	r3, [r3, #0]
 8001006:	600a      	str	r2, [r1, #0]
 8001008:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800100c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001010:	2301      	movs	r3, #1
 8001012:	e0a3      	b.n	800115c <_printf_i+0x1f4>
 8001014:	6825      	ldr	r5, [r4, #0]
 8001016:	6808      	ldr	r0, [r1, #0]
 8001018:	062e      	lsls	r6, r5, #24
 800101a:	f100 0304 	add.w	r3, r0, #4
 800101e:	d50a      	bpl.n	8001036 <_printf_i+0xce>
 8001020:	6805      	ldr	r5, [r0, #0]
 8001022:	600b      	str	r3, [r1, #0]
 8001024:	2d00      	cmp	r5, #0
 8001026:	da03      	bge.n	8001030 <_printf_i+0xc8>
 8001028:	232d      	movs	r3, #45	; 0x2d
 800102a:	426d      	negs	r5, r5
 800102c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001030:	485e      	ldr	r0, [pc, #376]	; (80011ac <_printf_i+0x244>)
 8001032:	230a      	movs	r3, #10
 8001034:	e019      	b.n	800106a <_printf_i+0x102>
 8001036:	f015 0f40 	tst.w	r5, #64	; 0x40
 800103a:	6805      	ldr	r5, [r0, #0]
 800103c:	600b      	str	r3, [r1, #0]
 800103e:	bf18      	it	ne
 8001040:	b22d      	sxthne	r5, r5
 8001042:	e7ef      	b.n	8001024 <_printf_i+0xbc>
 8001044:	680b      	ldr	r3, [r1, #0]
 8001046:	6825      	ldr	r5, [r4, #0]
 8001048:	1d18      	adds	r0, r3, #4
 800104a:	6008      	str	r0, [r1, #0]
 800104c:	0628      	lsls	r0, r5, #24
 800104e:	d501      	bpl.n	8001054 <_printf_i+0xec>
 8001050:	681d      	ldr	r5, [r3, #0]
 8001052:	e002      	b.n	800105a <_printf_i+0xf2>
 8001054:	0669      	lsls	r1, r5, #25
 8001056:	d5fb      	bpl.n	8001050 <_printf_i+0xe8>
 8001058:	881d      	ldrh	r5, [r3, #0]
 800105a:	4854      	ldr	r0, [pc, #336]	; (80011ac <_printf_i+0x244>)
 800105c:	2f6f      	cmp	r7, #111	; 0x6f
 800105e:	bf0c      	ite	eq
 8001060:	2308      	moveq	r3, #8
 8001062:	230a      	movne	r3, #10
 8001064:	2100      	movs	r1, #0
 8001066:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800106a:	6866      	ldr	r6, [r4, #4]
 800106c:	60a6      	str	r6, [r4, #8]
 800106e:	2e00      	cmp	r6, #0
 8001070:	bfa2      	ittt	ge
 8001072:	6821      	ldrge	r1, [r4, #0]
 8001074:	f021 0104 	bicge.w	r1, r1, #4
 8001078:	6021      	strge	r1, [r4, #0]
 800107a:	b90d      	cbnz	r5, 8001080 <_printf_i+0x118>
 800107c:	2e00      	cmp	r6, #0
 800107e:	d04d      	beq.n	800111c <_printf_i+0x1b4>
 8001080:	4616      	mov	r6, r2
 8001082:	fbb5 f1f3 	udiv	r1, r5, r3
 8001086:	fb03 5711 	mls	r7, r3, r1, r5
 800108a:	5dc7      	ldrb	r7, [r0, r7]
 800108c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001090:	462f      	mov	r7, r5
 8001092:	42bb      	cmp	r3, r7
 8001094:	460d      	mov	r5, r1
 8001096:	d9f4      	bls.n	8001082 <_printf_i+0x11a>
 8001098:	2b08      	cmp	r3, #8
 800109a:	d10b      	bne.n	80010b4 <_printf_i+0x14c>
 800109c:	6823      	ldr	r3, [r4, #0]
 800109e:	07df      	lsls	r7, r3, #31
 80010a0:	d508      	bpl.n	80010b4 <_printf_i+0x14c>
 80010a2:	6923      	ldr	r3, [r4, #16]
 80010a4:	6861      	ldr	r1, [r4, #4]
 80010a6:	4299      	cmp	r1, r3
 80010a8:	bfde      	ittt	le
 80010aa:	2330      	movle	r3, #48	; 0x30
 80010ac:	f806 3c01 	strble.w	r3, [r6, #-1]
 80010b0:	f106 36ff 	addle.w	r6, r6, #4294967295
 80010b4:	1b92      	subs	r2, r2, r6
 80010b6:	6122      	str	r2, [r4, #16]
 80010b8:	f8cd a000 	str.w	sl, [sp]
 80010bc:	464b      	mov	r3, r9
 80010be:	aa03      	add	r2, sp, #12
 80010c0:	4621      	mov	r1, r4
 80010c2:	4640      	mov	r0, r8
 80010c4:	f7ff fee2 	bl	8000e8c <_printf_common>
 80010c8:	3001      	adds	r0, #1
 80010ca:	d14c      	bne.n	8001166 <_printf_i+0x1fe>
 80010cc:	f04f 30ff 	mov.w	r0, #4294967295
 80010d0:	b004      	add	sp, #16
 80010d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010d6:	4835      	ldr	r0, [pc, #212]	; (80011ac <_printf_i+0x244>)
 80010d8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80010dc:	6823      	ldr	r3, [r4, #0]
 80010de:	680e      	ldr	r6, [r1, #0]
 80010e0:	061f      	lsls	r7, r3, #24
 80010e2:	f856 5b04 	ldr.w	r5, [r6], #4
 80010e6:	600e      	str	r6, [r1, #0]
 80010e8:	d514      	bpl.n	8001114 <_printf_i+0x1ac>
 80010ea:	07d9      	lsls	r1, r3, #31
 80010ec:	bf44      	itt	mi
 80010ee:	f043 0320 	orrmi.w	r3, r3, #32
 80010f2:	6023      	strmi	r3, [r4, #0]
 80010f4:	b91d      	cbnz	r5, 80010fe <_printf_i+0x196>
 80010f6:	6823      	ldr	r3, [r4, #0]
 80010f8:	f023 0320 	bic.w	r3, r3, #32
 80010fc:	6023      	str	r3, [r4, #0]
 80010fe:	2310      	movs	r3, #16
 8001100:	e7b0      	b.n	8001064 <_printf_i+0xfc>
 8001102:	6823      	ldr	r3, [r4, #0]
 8001104:	f043 0320 	orr.w	r3, r3, #32
 8001108:	6023      	str	r3, [r4, #0]
 800110a:	2378      	movs	r3, #120	; 0x78
 800110c:	4828      	ldr	r0, [pc, #160]	; (80011b0 <_printf_i+0x248>)
 800110e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001112:	e7e3      	b.n	80010dc <_printf_i+0x174>
 8001114:	065e      	lsls	r6, r3, #25
 8001116:	bf48      	it	mi
 8001118:	b2ad      	uxthmi	r5, r5
 800111a:	e7e6      	b.n	80010ea <_printf_i+0x182>
 800111c:	4616      	mov	r6, r2
 800111e:	e7bb      	b.n	8001098 <_printf_i+0x130>
 8001120:	680b      	ldr	r3, [r1, #0]
 8001122:	6826      	ldr	r6, [r4, #0]
 8001124:	6960      	ldr	r0, [r4, #20]
 8001126:	1d1d      	adds	r5, r3, #4
 8001128:	600d      	str	r5, [r1, #0]
 800112a:	0635      	lsls	r5, r6, #24
 800112c:	681b      	ldr	r3, [r3, #0]
 800112e:	d501      	bpl.n	8001134 <_printf_i+0x1cc>
 8001130:	6018      	str	r0, [r3, #0]
 8001132:	e002      	b.n	800113a <_printf_i+0x1d2>
 8001134:	0671      	lsls	r1, r6, #25
 8001136:	d5fb      	bpl.n	8001130 <_printf_i+0x1c8>
 8001138:	8018      	strh	r0, [r3, #0]
 800113a:	2300      	movs	r3, #0
 800113c:	6123      	str	r3, [r4, #16]
 800113e:	4616      	mov	r6, r2
 8001140:	e7ba      	b.n	80010b8 <_printf_i+0x150>
 8001142:	680b      	ldr	r3, [r1, #0]
 8001144:	1d1a      	adds	r2, r3, #4
 8001146:	600a      	str	r2, [r1, #0]
 8001148:	681e      	ldr	r6, [r3, #0]
 800114a:	6862      	ldr	r2, [r4, #4]
 800114c:	2100      	movs	r1, #0
 800114e:	4630      	mov	r0, r6
 8001150:	f7ff f85e 	bl	8000210 <memchr>
 8001154:	b108      	cbz	r0, 800115a <_printf_i+0x1f2>
 8001156:	1b80      	subs	r0, r0, r6
 8001158:	6060      	str	r0, [r4, #4]
 800115a:	6863      	ldr	r3, [r4, #4]
 800115c:	6123      	str	r3, [r4, #16]
 800115e:	2300      	movs	r3, #0
 8001160:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001164:	e7a8      	b.n	80010b8 <_printf_i+0x150>
 8001166:	6923      	ldr	r3, [r4, #16]
 8001168:	4632      	mov	r2, r6
 800116a:	4649      	mov	r1, r9
 800116c:	4640      	mov	r0, r8
 800116e:	47d0      	blx	sl
 8001170:	3001      	adds	r0, #1
 8001172:	d0ab      	beq.n	80010cc <_printf_i+0x164>
 8001174:	6823      	ldr	r3, [r4, #0]
 8001176:	079b      	lsls	r3, r3, #30
 8001178:	d413      	bmi.n	80011a2 <_printf_i+0x23a>
 800117a:	68e0      	ldr	r0, [r4, #12]
 800117c:	9b03      	ldr	r3, [sp, #12]
 800117e:	4298      	cmp	r0, r3
 8001180:	bfb8      	it	lt
 8001182:	4618      	movlt	r0, r3
 8001184:	e7a4      	b.n	80010d0 <_printf_i+0x168>
 8001186:	2301      	movs	r3, #1
 8001188:	4632      	mov	r2, r6
 800118a:	4649      	mov	r1, r9
 800118c:	4640      	mov	r0, r8
 800118e:	47d0      	blx	sl
 8001190:	3001      	adds	r0, #1
 8001192:	d09b      	beq.n	80010cc <_printf_i+0x164>
 8001194:	3501      	adds	r5, #1
 8001196:	68e3      	ldr	r3, [r4, #12]
 8001198:	9903      	ldr	r1, [sp, #12]
 800119a:	1a5b      	subs	r3, r3, r1
 800119c:	42ab      	cmp	r3, r5
 800119e:	dcf2      	bgt.n	8001186 <_printf_i+0x21e>
 80011a0:	e7eb      	b.n	800117a <_printf_i+0x212>
 80011a2:	2500      	movs	r5, #0
 80011a4:	f104 0619 	add.w	r6, r4, #25
 80011a8:	e7f5      	b.n	8001196 <_printf_i+0x22e>
 80011aa:	bf00      	nop
 80011ac:	080019d5 	.word	0x080019d5
 80011b0:	080019e6 	.word	0x080019e6

080011b4 <_putc_r>:
 80011b4:	b570      	push	{r4, r5, r6, lr}
 80011b6:	460d      	mov	r5, r1
 80011b8:	4614      	mov	r4, r2
 80011ba:	4606      	mov	r6, r0
 80011bc:	b118      	cbz	r0, 80011c6 <_putc_r+0x12>
 80011be:	6983      	ldr	r3, [r0, #24]
 80011c0:	b90b      	cbnz	r3, 80011c6 <_putc_r+0x12>
 80011c2:	f7ff fba5 	bl	8000910 <__sinit>
 80011c6:	4b1c      	ldr	r3, [pc, #112]	; (8001238 <_putc_r+0x84>)
 80011c8:	429c      	cmp	r4, r3
 80011ca:	d124      	bne.n	8001216 <_putc_r+0x62>
 80011cc:	6874      	ldr	r4, [r6, #4]
 80011ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011d0:	07d8      	lsls	r0, r3, #31
 80011d2:	d405      	bmi.n	80011e0 <_putc_r+0x2c>
 80011d4:	89a3      	ldrh	r3, [r4, #12]
 80011d6:	0599      	lsls	r1, r3, #22
 80011d8:	d402      	bmi.n	80011e0 <_putc_r+0x2c>
 80011da:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011dc:	f7ff fc48 	bl	8000a70 <__retarget_lock_acquire_recursive>
 80011e0:	68a3      	ldr	r3, [r4, #8]
 80011e2:	3b01      	subs	r3, #1
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	60a3      	str	r3, [r4, #8]
 80011e8:	da05      	bge.n	80011f6 <_putc_r+0x42>
 80011ea:	69a2      	ldr	r2, [r4, #24]
 80011ec:	4293      	cmp	r3, r2
 80011ee:	db1c      	blt.n	800122a <_putc_r+0x76>
 80011f0:	b2eb      	uxtb	r3, r5
 80011f2:	2b0a      	cmp	r3, #10
 80011f4:	d019      	beq.n	800122a <_putc_r+0x76>
 80011f6:	6823      	ldr	r3, [r4, #0]
 80011f8:	1c5a      	adds	r2, r3, #1
 80011fa:	6022      	str	r2, [r4, #0]
 80011fc:	701d      	strb	r5, [r3, #0]
 80011fe:	b2ed      	uxtb	r5, r5
 8001200:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001202:	07da      	lsls	r2, r3, #31
 8001204:	d405      	bmi.n	8001212 <_putc_r+0x5e>
 8001206:	89a3      	ldrh	r3, [r4, #12]
 8001208:	059b      	lsls	r3, r3, #22
 800120a:	d402      	bmi.n	8001212 <_putc_r+0x5e>
 800120c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800120e:	f7ff fc30 	bl	8000a72 <__retarget_lock_release_recursive>
 8001212:	4628      	mov	r0, r5
 8001214:	bd70      	pop	{r4, r5, r6, pc}
 8001216:	4b09      	ldr	r3, [pc, #36]	; (800123c <_putc_r+0x88>)
 8001218:	429c      	cmp	r4, r3
 800121a:	d101      	bne.n	8001220 <_putc_r+0x6c>
 800121c:	68b4      	ldr	r4, [r6, #8]
 800121e:	e7d6      	b.n	80011ce <_putc_r+0x1a>
 8001220:	4b07      	ldr	r3, [pc, #28]	; (8001240 <_putc_r+0x8c>)
 8001222:	429c      	cmp	r4, r3
 8001224:	bf08      	it	eq
 8001226:	68f4      	ldreq	r4, [r6, #12]
 8001228:	e7d1      	b.n	80011ce <_putc_r+0x1a>
 800122a:	4629      	mov	r1, r5
 800122c:	4622      	mov	r2, r4
 800122e:	4630      	mov	r0, r6
 8001230:	f000 f85c 	bl	80012ec <__swbuf_r>
 8001234:	4605      	mov	r5, r0
 8001236:	e7e3      	b.n	8001200 <_putc_r+0x4c>
 8001238:	08001984 	.word	0x08001984
 800123c:	080019a4 	.word	0x080019a4
 8001240:	08001964 	.word	0x08001964

08001244 <_sbrk_r>:
 8001244:	b538      	push	{r3, r4, r5, lr}
 8001246:	4d06      	ldr	r5, [pc, #24]	; (8001260 <_sbrk_r+0x1c>)
 8001248:	2300      	movs	r3, #0
 800124a:	4604      	mov	r4, r0
 800124c:	4608      	mov	r0, r1
 800124e:	602b      	str	r3, [r5, #0]
 8001250:	f7ff f9e8 	bl	8000624 <_sbrk>
 8001254:	1c43      	adds	r3, r0, #1
 8001256:	d102      	bne.n	800125e <_sbrk_r+0x1a>
 8001258:	682b      	ldr	r3, [r5, #0]
 800125a:	b103      	cbz	r3, 800125e <_sbrk_r+0x1a>
 800125c:	6023      	str	r3, [r4, #0]
 800125e:	bd38      	pop	{r3, r4, r5, pc}
 8001260:	200000e0 	.word	0x200000e0

08001264 <__sread>:
 8001264:	b510      	push	{r4, lr}
 8001266:	460c      	mov	r4, r1
 8001268:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800126c:	f000 fa6c 	bl	8001748 <_read_r>
 8001270:	2800      	cmp	r0, #0
 8001272:	bfab      	itete	ge
 8001274:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001276:	89a3      	ldrhlt	r3, [r4, #12]
 8001278:	181b      	addge	r3, r3, r0
 800127a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800127e:	bfac      	ite	ge
 8001280:	6563      	strge	r3, [r4, #84]	; 0x54
 8001282:	81a3      	strhlt	r3, [r4, #12]
 8001284:	bd10      	pop	{r4, pc}

08001286 <__swrite>:
 8001286:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800128a:	461f      	mov	r7, r3
 800128c:	898b      	ldrh	r3, [r1, #12]
 800128e:	05db      	lsls	r3, r3, #23
 8001290:	4605      	mov	r5, r0
 8001292:	460c      	mov	r4, r1
 8001294:	4616      	mov	r6, r2
 8001296:	d505      	bpl.n	80012a4 <__swrite+0x1e>
 8001298:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800129c:	2302      	movs	r3, #2
 800129e:	2200      	movs	r2, #0
 80012a0:	f000 f9d0 	bl	8001644 <_lseek_r>
 80012a4:	89a3      	ldrh	r3, [r4, #12]
 80012a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012ae:	81a3      	strh	r3, [r4, #12]
 80012b0:	4632      	mov	r2, r6
 80012b2:	463b      	mov	r3, r7
 80012b4:	4628      	mov	r0, r5
 80012b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012ba:	f000 b869 	b.w	8001390 <_write_r>

080012be <__sseek>:
 80012be:	b510      	push	{r4, lr}
 80012c0:	460c      	mov	r4, r1
 80012c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012c6:	f000 f9bd 	bl	8001644 <_lseek_r>
 80012ca:	1c43      	adds	r3, r0, #1
 80012cc:	89a3      	ldrh	r3, [r4, #12]
 80012ce:	bf15      	itete	ne
 80012d0:	6560      	strne	r0, [r4, #84]	; 0x54
 80012d2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80012d6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80012da:	81a3      	strheq	r3, [r4, #12]
 80012dc:	bf18      	it	ne
 80012de:	81a3      	strhne	r3, [r4, #12]
 80012e0:	bd10      	pop	{r4, pc}

080012e2 <__sclose>:
 80012e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e6:	f000 b8db 	b.w	80014a0 <_close_r>
	...

080012ec <__swbuf_r>:
 80012ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ee:	460e      	mov	r6, r1
 80012f0:	4614      	mov	r4, r2
 80012f2:	4605      	mov	r5, r0
 80012f4:	b118      	cbz	r0, 80012fe <__swbuf_r+0x12>
 80012f6:	6983      	ldr	r3, [r0, #24]
 80012f8:	b90b      	cbnz	r3, 80012fe <__swbuf_r+0x12>
 80012fa:	f7ff fb09 	bl	8000910 <__sinit>
 80012fe:	4b21      	ldr	r3, [pc, #132]	; (8001384 <__swbuf_r+0x98>)
 8001300:	429c      	cmp	r4, r3
 8001302:	d12b      	bne.n	800135c <__swbuf_r+0x70>
 8001304:	686c      	ldr	r4, [r5, #4]
 8001306:	69a3      	ldr	r3, [r4, #24]
 8001308:	60a3      	str	r3, [r4, #8]
 800130a:	89a3      	ldrh	r3, [r4, #12]
 800130c:	071a      	lsls	r2, r3, #28
 800130e:	d52f      	bpl.n	8001370 <__swbuf_r+0x84>
 8001310:	6923      	ldr	r3, [r4, #16]
 8001312:	b36b      	cbz	r3, 8001370 <__swbuf_r+0x84>
 8001314:	6923      	ldr	r3, [r4, #16]
 8001316:	6820      	ldr	r0, [r4, #0]
 8001318:	1ac0      	subs	r0, r0, r3
 800131a:	6963      	ldr	r3, [r4, #20]
 800131c:	b2f6      	uxtb	r6, r6
 800131e:	4283      	cmp	r3, r0
 8001320:	4637      	mov	r7, r6
 8001322:	dc04      	bgt.n	800132e <__swbuf_r+0x42>
 8001324:	4621      	mov	r1, r4
 8001326:	4628      	mov	r0, r5
 8001328:	f000 f950 	bl	80015cc <_fflush_r>
 800132c:	bb30      	cbnz	r0, 800137c <__swbuf_r+0x90>
 800132e:	68a3      	ldr	r3, [r4, #8]
 8001330:	3b01      	subs	r3, #1
 8001332:	60a3      	str	r3, [r4, #8]
 8001334:	6823      	ldr	r3, [r4, #0]
 8001336:	1c5a      	adds	r2, r3, #1
 8001338:	6022      	str	r2, [r4, #0]
 800133a:	701e      	strb	r6, [r3, #0]
 800133c:	6963      	ldr	r3, [r4, #20]
 800133e:	3001      	adds	r0, #1
 8001340:	4283      	cmp	r3, r0
 8001342:	d004      	beq.n	800134e <__swbuf_r+0x62>
 8001344:	89a3      	ldrh	r3, [r4, #12]
 8001346:	07db      	lsls	r3, r3, #31
 8001348:	d506      	bpl.n	8001358 <__swbuf_r+0x6c>
 800134a:	2e0a      	cmp	r6, #10
 800134c:	d104      	bne.n	8001358 <__swbuf_r+0x6c>
 800134e:	4621      	mov	r1, r4
 8001350:	4628      	mov	r0, r5
 8001352:	f000 f93b 	bl	80015cc <_fflush_r>
 8001356:	b988      	cbnz	r0, 800137c <__swbuf_r+0x90>
 8001358:	4638      	mov	r0, r7
 800135a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800135c:	4b0a      	ldr	r3, [pc, #40]	; (8001388 <__swbuf_r+0x9c>)
 800135e:	429c      	cmp	r4, r3
 8001360:	d101      	bne.n	8001366 <__swbuf_r+0x7a>
 8001362:	68ac      	ldr	r4, [r5, #8]
 8001364:	e7cf      	b.n	8001306 <__swbuf_r+0x1a>
 8001366:	4b09      	ldr	r3, [pc, #36]	; (800138c <__swbuf_r+0xa0>)
 8001368:	429c      	cmp	r4, r3
 800136a:	bf08      	it	eq
 800136c:	68ec      	ldreq	r4, [r5, #12]
 800136e:	e7ca      	b.n	8001306 <__swbuf_r+0x1a>
 8001370:	4621      	mov	r1, r4
 8001372:	4628      	mov	r0, r5
 8001374:	f000 f81e 	bl	80013b4 <__swsetup_r>
 8001378:	2800      	cmp	r0, #0
 800137a:	d0cb      	beq.n	8001314 <__swbuf_r+0x28>
 800137c:	f04f 37ff 	mov.w	r7, #4294967295
 8001380:	e7ea      	b.n	8001358 <__swbuf_r+0x6c>
 8001382:	bf00      	nop
 8001384:	08001984 	.word	0x08001984
 8001388:	080019a4 	.word	0x080019a4
 800138c:	08001964 	.word	0x08001964

08001390 <_write_r>:
 8001390:	b538      	push	{r3, r4, r5, lr}
 8001392:	4d07      	ldr	r5, [pc, #28]	; (80013b0 <_write_r+0x20>)
 8001394:	4604      	mov	r4, r0
 8001396:	4608      	mov	r0, r1
 8001398:	4611      	mov	r1, r2
 800139a:	2200      	movs	r2, #0
 800139c:	602a      	str	r2, [r5, #0]
 800139e:	461a      	mov	r2, r3
 80013a0:	f7ff f8ef 	bl	8000582 <_write>
 80013a4:	1c43      	adds	r3, r0, #1
 80013a6:	d102      	bne.n	80013ae <_write_r+0x1e>
 80013a8:	682b      	ldr	r3, [r5, #0]
 80013aa:	b103      	cbz	r3, 80013ae <_write_r+0x1e>
 80013ac:	6023      	str	r3, [r4, #0]
 80013ae:	bd38      	pop	{r3, r4, r5, pc}
 80013b0:	200000e0 	.word	0x200000e0

080013b4 <__swsetup_r>:
 80013b4:	4b32      	ldr	r3, [pc, #200]	; (8001480 <__swsetup_r+0xcc>)
 80013b6:	b570      	push	{r4, r5, r6, lr}
 80013b8:	681d      	ldr	r5, [r3, #0]
 80013ba:	4606      	mov	r6, r0
 80013bc:	460c      	mov	r4, r1
 80013be:	b125      	cbz	r5, 80013ca <__swsetup_r+0x16>
 80013c0:	69ab      	ldr	r3, [r5, #24]
 80013c2:	b913      	cbnz	r3, 80013ca <__swsetup_r+0x16>
 80013c4:	4628      	mov	r0, r5
 80013c6:	f7ff faa3 	bl	8000910 <__sinit>
 80013ca:	4b2e      	ldr	r3, [pc, #184]	; (8001484 <__swsetup_r+0xd0>)
 80013cc:	429c      	cmp	r4, r3
 80013ce:	d10f      	bne.n	80013f0 <__swsetup_r+0x3c>
 80013d0:	686c      	ldr	r4, [r5, #4]
 80013d2:	89a3      	ldrh	r3, [r4, #12]
 80013d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80013d8:	0719      	lsls	r1, r3, #28
 80013da:	d42c      	bmi.n	8001436 <__swsetup_r+0x82>
 80013dc:	06dd      	lsls	r5, r3, #27
 80013de:	d411      	bmi.n	8001404 <__swsetup_r+0x50>
 80013e0:	2309      	movs	r3, #9
 80013e2:	6033      	str	r3, [r6, #0]
 80013e4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80013e8:	81a3      	strh	r3, [r4, #12]
 80013ea:	f04f 30ff 	mov.w	r0, #4294967295
 80013ee:	e03e      	b.n	800146e <__swsetup_r+0xba>
 80013f0:	4b25      	ldr	r3, [pc, #148]	; (8001488 <__swsetup_r+0xd4>)
 80013f2:	429c      	cmp	r4, r3
 80013f4:	d101      	bne.n	80013fa <__swsetup_r+0x46>
 80013f6:	68ac      	ldr	r4, [r5, #8]
 80013f8:	e7eb      	b.n	80013d2 <__swsetup_r+0x1e>
 80013fa:	4b24      	ldr	r3, [pc, #144]	; (800148c <__swsetup_r+0xd8>)
 80013fc:	429c      	cmp	r4, r3
 80013fe:	bf08      	it	eq
 8001400:	68ec      	ldreq	r4, [r5, #12]
 8001402:	e7e6      	b.n	80013d2 <__swsetup_r+0x1e>
 8001404:	0758      	lsls	r0, r3, #29
 8001406:	d512      	bpl.n	800142e <__swsetup_r+0x7a>
 8001408:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800140a:	b141      	cbz	r1, 800141e <__swsetup_r+0x6a>
 800140c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001410:	4299      	cmp	r1, r3
 8001412:	d002      	beq.n	800141a <__swsetup_r+0x66>
 8001414:	4630      	mov	r0, r6
 8001416:	f7ff fb35 	bl	8000a84 <_free_r>
 800141a:	2300      	movs	r3, #0
 800141c:	6363      	str	r3, [r4, #52]	; 0x34
 800141e:	89a3      	ldrh	r3, [r4, #12]
 8001420:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001424:	81a3      	strh	r3, [r4, #12]
 8001426:	2300      	movs	r3, #0
 8001428:	6063      	str	r3, [r4, #4]
 800142a:	6923      	ldr	r3, [r4, #16]
 800142c:	6023      	str	r3, [r4, #0]
 800142e:	89a3      	ldrh	r3, [r4, #12]
 8001430:	f043 0308 	orr.w	r3, r3, #8
 8001434:	81a3      	strh	r3, [r4, #12]
 8001436:	6923      	ldr	r3, [r4, #16]
 8001438:	b94b      	cbnz	r3, 800144e <__swsetup_r+0x9a>
 800143a:	89a3      	ldrh	r3, [r4, #12]
 800143c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001440:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001444:	d003      	beq.n	800144e <__swsetup_r+0x9a>
 8001446:	4621      	mov	r1, r4
 8001448:	4630      	mov	r0, r6
 800144a:	f000 f931 	bl	80016b0 <__smakebuf_r>
 800144e:	89a0      	ldrh	r0, [r4, #12]
 8001450:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001454:	f010 0301 	ands.w	r3, r0, #1
 8001458:	d00a      	beq.n	8001470 <__swsetup_r+0xbc>
 800145a:	2300      	movs	r3, #0
 800145c:	60a3      	str	r3, [r4, #8]
 800145e:	6963      	ldr	r3, [r4, #20]
 8001460:	425b      	negs	r3, r3
 8001462:	61a3      	str	r3, [r4, #24]
 8001464:	6923      	ldr	r3, [r4, #16]
 8001466:	b943      	cbnz	r3, 800147a <__swsetup_r+0xc6>
 8001468:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800146c:	d1ba      	bne.n	80013e4 <__swsetup_r+0x30>
 800146e:	bd70      	pop	{r4, r5, r6, pc}
 8001470:	0781      	lsls	r1, r0, #30
 8001472:	bf58      	it	pl
 8001474:	6963      	ldrpl	r3, [r4, #20]
 8001476:	60a3      	str	r3, [r4, #8]
 8001478:	e7f4      	b.n	8001464 <__swsetup_r+0xb0>
 800147a:	2000      	movs	r0, #0
 800147c:	e7f7      	b.n	800146e <__swsetup_r+0xba>
 800147e:	bf00      	nop
 8001480:	20000048 	.word	0x20000048
 8001484:	08001984 	.word	0x08001984
 8001488:	080019a4 	.word	0x080019a4
 800148c:	08001964 	.word	0x08001964

08001490 <abort>:
 8001490:	b508      	push	{r3, lr}
 8001492:	2006      	movs	r0, #6
 8001494:	f000 f992 	bl	80017bc <raise>
 8001498:	2001      	movs	r0, #1
 800149a:	f7ff f84b 	bl	8000534 <_exit>
	...

080014a0 <_close_r>:
 80014a0:	b538      	push	{r3, r4, r5, lr}
 80014a2:	4d06      	ldr	r5, [pc, #24]	; (80014bc <_close_r+0x1c>)
 80014a4:	2300      	movs	r3, #0
 80014a6:	4604      	mov	r4, r0
 80014a8:	4608      	mov	r0, r1
 80014aa:	602b      	str	r3, [r5, #0]
 80014ac:	f7ff f885 	bl	80005ba <_close>
 80014b0:	1c43      	adds	r3, r0, #1
 80014b2:	d102      	bne.n	80014ba <_close_r+0x1a>
 80014b4:	682b      	ldr	r3, [r5, #0]
 80014b6:	b103      	cbz	r3, 80014ba <_close_r+0x1a>
 80014b8:	6023      	str	r3, [r4, #0]
 80014ba:	bd38      	pop	{r3, r4, r5, pc}
 80014bc:	200000e0 	.word	0x200000e0

080014c0 <__sflush_r>:
 80014c0:	898a      	ldrh	r2, [r1, #12]
 80014c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014c6:	4605      	mov	r5, r0
 80014c8:	0710      	lsls	r0, r2, #28
 80014ca:	460c      	mov	r4, r1
 80014cc:	d458      	bmi.n	8001580 <__sflush_r+0xc0>
 80014ce:	684b      	ldr	r3, [r1, #4]
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	dc05      	bgt.n	80014e0 <__sflush_r+0x20>
 80014d4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80014d6:	2b00      	cmp	r3, #0
 80014d8:	dc02      	bgt.n	80014e0 <__sflush_r+0x20>
 80014da:	2000      	movs	r0, #0
 80014dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80014e2:	2e00      	cmp	r6, #0
 80014e4:	d0f9      	beq.n	80014da <__sflush_r+0x1a>
 80014e6:	2300      	movs	r3, #0
 80014e8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80014ec:	682f      	ldr	r7, [r5, #0]
 80014ee:	602b      	str	r3, [r5, #0]
 80014f0:	d032      	beq.n	8001558 <__sflush_r+0x98>
 80014f2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80014f4:	89a3      	ldrh	r3, [r4, #12]
 80014f6:	075a      	lsls	r2, r3, #29
 80014f8:	d505      	bpl.n	8001506 <__sflush_r+0x46>
 80014fa:	6863      	ldr	r3, [r4, #4]
 80014fc:	1ac0      	subs	r0, r0, r3
 80014fe:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001500:	b10b      	cbz	r3, 8001506 <__sflush_r+0x46>
 8001502:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001504:	1ac0      	subs	r0, r0, r3
 8001506:	2300      	movs	r3, #0
 8001508:	4602      	mov	r2, r0
 800150a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800150c:	6a21      	ldr	r1, [r4, #32]
 800150e:	4628      	mov	r0, r5
 8001510:	47b0      	blx	r6
 8001512:	1c43      	adds	r3, r0, #1
 8001514:	89a3      	ldrh	r3, [r4, #12]
 8001516:	d106      	bne.n	8001526 <__sflush_r+0x66>
 8001518:	6829      	ldr	r1, [r5, #0]
 800151a:	291d      	cmp	r1, #29
 800151c:	d82c      	bhi.n	8001578 <__sflush_r+0xb8>
 800151e:	4a2a      	ldr	r2, [pc, #168]	; (80015c8 <__sflush_r+0x108>)
 8001520:	40ca      	lsrs	r2, r1
 8001522:	07d6      	lsls	r6, r2, #31
 8001524:	d528      	bpl.n	8001578 <__sflush_r+0xb8>
 8001526:	2200      	movs	r2, #0
 8001528:	6062      	str	r2, [r4, #4]
 800152a:	04d9      	lsls	r1, r3, #19
 800152c:	6922      	ldr	r2, [r4, #16]
 800152e:	6022      	str	r2, [r4, #0]
 8001530:	d504      	bpl.n	800153c <__sflush_r+0x7c>
 8001532:	1c42      	adds	r2, r0, #1
 8001534:	d101      	bne.n	800153a <__sflush_r+0x7a>
 8001536:	682b      	ldr	r3, [r5, #0]
 8001538:	b903      	cbnz	r3, 800153c <__sflush_r+0x7c>
 800153a:	6560      	str	r0, [r4, #84]	; 0x54
 800153c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800153e:	602f      	str	r7, [r5, #0]
 8001540:	2900      	cmp	r1, #0
 8001542:	d0ca      	beq.n	80014da <__sflush_r+0x1a>
 8001544:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001548:	4299      	cmp	r1, r3
 800154a:	d002      	beq.n	8001552 <__sflush_r+0x92>
 800154c:	4628      	mov	r0, r5
 800154e:	f7ff fa99 	bl	8000a84 <_free_r>
 8001552:	2000      	movs	r0, #0
 8001554:	6360      	str	r0, [r4, #52]	; 0x34
 8001556:	e7c1      	b.n	80014dc <__sflush_r+0x1c>
 8001558:	6a21      	ldr	r1, [r4, #32]
 800155a:	2301      	movs	r3, #1
 800155c:	4628      	mov	r0, r5
 800155e:	47b0      	blx	r6
 8001560:	1c41      	adds	r1, r0, #1
 8001562:	d1c7      	bne.n	80014f4 <__sflush_r+0x34>
 8001564:	682b      	ldr	r3, [r5, #0]
 8001566:	2b00      	cmp	r3, #0
 8001568:	d0c4      	beq.n	80014f4 <__sflush_r+0x34>
 800156a:	2b1d      	cmp	r3, #29
 800156c:	d001      	beq.n	8001572 <__sflush_r+0xb2>
 800156e:	2b16      	cmp	r3, #22
 8001570:	d101      	bne.n	8001576 <__sflush_r+0xb6>
 8001572:	602f      	str	r7, [r5, #0]
 8001574:	e7b1      	b.n	80014da <__sflush_r+0x1a>
 8001576:	89a3      	ldrh	r3, [r4, #12]
 8001578:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800157c:	81a3      	strh	r3, [r4, #12]
 800157e:	e7ad      	b.n	80014dc <__sflush_r+0x1c>
 8001580:	690f      	ldr	r7, [r1, #16]
 8001582:	2f00      	cmp	r7, #0
 8001584:	d0a9      	beq.n	80014da <__sflush_r+0x1a>
 8001586:	0793      	lsls	r3, r2, #30
 8001588:	680e      	ldr	r6, [r1, #0]
 800158a:	bf08      	it	eq
 800158c:	694b      	ldreq	r3, [r1, #20]
 800158e:	600f      	str	r7, [r1, #0]
 8001590:	bf18      	it	ne
 8001592:	2300      	movne	r3, #0
 8001594:	eba6 0807 	sub.w	r8, r6, r7
 8001598:	608b      	str	r3, [r1, #8]
 800159a:	f1b8 0f00 	cmp.w	r8, #0
 800159e:	dd9c      	ble.n	80014da <__sflush_r+0x1a>
 80015a0:	6a21      	ldr	r1, [r4, #32]
 80015a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80015a4:	4643      	mov	r3, r8
 80015a6:	463a      	mov	r2, r7
 80015a8:	4628      	mov	r0, r5
 80015aa:	47b0      	blx	r6
 80015ac:	2800      	cmp	r0, #0
 80015ae:	dc06      	bgt.n	80015be <__sflush_r+0xfe>
 80015b0:	89a3      	ldrh	r3, [r4, #12]
 80015b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015b6:	81a3      	strh	r3, [r4, #12]
 80015b8:	f04f 30ff 	mov.w	r0, #4294967295
 80015bc:	e78e      	b.n	80014dc <__sflush_r+0x1c>
 80015be:	4407      	add	r7, r0
 80015c0:	eba8 0800 	sub.w	r8, r8, r0
 80015c4:	e7e9      	b.n	800159a <__sflush_r+0xda>
 80015c6:	bf00      	nop
 80015c8:	20400001 	.word	0x20400001

080015cc <_fflush_r>:
 80015cc:	b538      	push	{r3, r4, r5, lr}
 80015ce:	690b      	ldr	r3, [r1, #16]
 80015d0:	4605      	mov	r5, r0
 80015d2:	460c      	mov	r4, r1
 80015d4:	b913      	cbnz	r3, 80015dc <_fflush_r+0x10>
 80015d6:	2500      	movs	r5, #0
 80015d8:	4628      	mov	r0, r5
 80015da:	bd38      	pop	{r3, r4, r5, pc}
 80015dc:	b118      	cbz	r0, 80015e6 <_fflush_r+0x1a>
 80015de:	6983      	ldr	r3, [r0, #24]
 80015e0:	b90b      	cbnz	r3, 80015e6 <_fflush_r+0x1a>
 80015e2:	f7ff f995 	bl	8000910 <__sinit>
 80015e6:	4b14      	ldr	r3, [pc, #80]	; (8001638 <_fflush_r+0x6c>)
 80015e8:	429c      	cmp	r4, r3
 80015ea:	d11b      	bne.n	8001624 <_fflush_r+0x58>
 80015ec:	686c      	ldr	r4, [r5, #4]
 80015ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d0ef      	beq.n	80015d6 <_fflush_r+0xa>
 80015f6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80015f8:	07d0      	lsls	r0, r2, #31
 80015fa:	d404      	bmi.n	8001606 <_fflush_r+0x3a>
 80015fc:	0599      	lsls	r1, r3, #22
 80015fe:	d402      	bmi.n	8001606 <_fflush_r+0x3a>
 8001600:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001602:	f7ff fa35 	bl	8000a70 <__retarget_lock_acquire_recursive>
 8001606:	4628      	mov	r0, r5
 8001608:	4621      	mov	r1, r4
 800160a:	f7ff ff59 	bl	80014c0 <__sflush_r>
 800160e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001610:	07da      	lsls	r2, r3, #31
 8001612:	4605      	mov	r5, r0
 8001614:	d4e0      	bmi.n	80015d8 <_fflush_r+0xc>
 8001616:	89a3      	ldrh	r3, [r4, #12]
 8001618:	059b      	lsls	r3, r3, #22
 800161a:	d4dd      	bmi.n	80015d8 <_fflush_r+0xc>
 800161c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800161e:	f7ff fa28 	bl	8000a72 <__retarget_lock_release_recursive>
 8001622:	e7d9      	b.n	80015d8 <_fflush_r+0xc>
 8001624:	4b05      	ldr	r3, [pc, #20]	; (800163c <_fflush_r+0x70>)
 8001626:	429c      	cmp	r4, r3
 8001628:	d101      	bne.n	800162e <_fflush_r+0x62>
 800162a:	68ac      	ldr	r4, [r5, #8]
 800162c:	e7df      	b.n	80015ee <_fflush_r+0x22>
 800162e:	4b04      	ldr	r3, [pc, #16]	; (8001640 <_fflush_r+0x74>)
 8001630:	429c      	cmp	r4, r3
 8001632:	bf08      	it	eq
 8001634:	68ec      	ldreq	r4, [r5, #12]
 8001636:	e7da      	b.n	80015ee <_fflush_r+0x22>
 8001638:	08001984 	.word	0x08001984
 800163c:	080019a4 	.word	0x080019a4
 8001640:	08001964 	.word	0x08001964

08001644 <_lseek_r>:
 8001644:	b538      	push	{r3, r4, r5, lr}
 8001646:	4d07      	ldr	r5, [pc, #28]	; (8001664 <_lseek_r+0x20>)
 8001648:	4604      	mov	r4, r0
 800164a:	4608      	mov	r0, r1
 800164c:	4611      	mov	r1, r2
 800164e:	2200      	movs	r2, #0
 8001650:	602a      	str	r2, [r5, #0]
 8001652:	461a      	mov	r2, r3
 8001654:	f7fe ffd8 	bl	8000608 <_lseek>
 8001658:	1c43      	adds	r3, r0, #1
 800165a:	d102      	bne.n	8001662 <_lseek_r+0x1e>
 800165c:	682b      	ldr	r3, [r5, #0]
 800165e:	b103      	cbz	r3, 8001662 <_lseek_r+0x1e>
 8001660:	6023      	str	r3, [r4, #0]
 8001662:	bd38      	pop	{r3, r4, r5, pc}
 8001664:	200000e0 	.word	0x200000e0

08001668 <__swhatbuf_r>:
 8001668:	b570      	push	{r4, r5, r6, lr}
 800166a:	460e      	mov	r6, r1
 800166c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001670:	2900      	cmp	r1, #0
 8001672:	b096      	sub	sp, #88	; 0x58
 8001674:	4614      	mov	r4, r2
 8001676:	461d      	mov	r5, r3
 8001678:	da07      	bge.n	800168a <__swhatbuf_r+0x22>
 800167a:	2300      	movs	r3, #0
 800167c:	602b      	str	r3, [r5, #0]
 800167e:	89b3      	ldrh	r3, [r6, #12]
 8001680:	061a      	lsls	r2, r3, #24
 8001682:	d410      	bmi.n	80016a6 <__swhatbuf_r+0x3e>
 8001684:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001688:	e00e      	b.n	80016a8 <__swhatbuf_r+0x40>
 800168a:	466a      	mov	r2, sp
 800168c:	f000 f8b2 	bl	80017f4 <_fstat_r>
 8001690:	2800      	cmp	r0, #0
 8001692:	dbf2      	blt.n	800167a <__swhatbuf_r+0x12>
 8001694:	9a01      	ldr	r2, [sp, #4]
 8001696:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800169a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800169e:	425a      	negs	r2, r3
 80016a0:	415a      	adcs	r2, r3
 80016a2:	602a      	str	r2, [r5, #0]
 80016a4:	e7ee      	b.n	8001684 <__swhatbuf_r+0x1c>
 80016a6:	2340      	movs	r3, #64	; 0x40
 80016a8:	2000      	movs	r0, #0
 80016aa:	6023      	str	r3, [r4, #0]
 80016ac:	b016      	add	sp, #88	; 0x58
 80016ae:	bd70      	pop	{r4, r5, r6, pc}

080016b0 <__smakebuf_r>:
 80016b0:	898b      	ldrh	r3, [r1, #12]
 80016b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80016b4:	079d      	lsls	r5, r3, #30
 80016b6:	4606      	mov	r6, r0
 80016b8:	460c      	mov	r4, r1
 80016ba:	d507      	bpl.n	80016cc <__smakebuf_r+0x1c>
 80016bc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80016c0:	6023      	str	r3, [r4, #0]
 80016c2:	6123      	str	r3, [r4, #16]
 80016c4:	2301      	movs	r3, #1
 80016c6:	6163      	str	r3, [r4, #20]
 80016c8:	b002      	add	sp, #8
 80016ca:	bd70      	pop	{r4, r5, r6, pc}
 80016cc:	ab01      	add	r3, sp, #4
 80016ce:	466a      	mov	r2, sp
 80016d0:	f7ff ffca 	bl	8001668 <__swhatbuf_r>
 80016d4:	9900      	ldr	r1, [sp, #0]
 80016d6:	4605      	mov	r5, r0
 80016d8:	4630      	mov	r0, r6
 80016da:	f7ff fa23 	bl	8000b24 <_malloc_r>
 80016de:	b948      	cbnz	r0, 80016f4 <__smakebuf_r+0x44>
 80016e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016e4:	059a      	lsls	r2, r3, #22
 80016e6:	d4ef      	bmi.n	80016c8 <__smakebuf_r+0x18>
 80016e8:	f023 0303 	bic.w	r3, r3, #3
 80016ec:	f043 0302 	orr.w	r3, r3, #2
 80016f0:	81a3      	strh	r3, [r4, #12]
 80016f2:	e7e3      	b.n	80016bc <__smakebuf_r+0xc>
 80016f4:	4b0d      	ldr	r3, [pc, #52]	; (800172c <__smakebuf_r+0x7c>)
 80016f6:	62b3      	str	r3, [r6, #40]	; 0x28
 80016f8:	89a3      	ldrh	r3, [r4, #12]
 80016fa:	6020      	str	r0, [r4, #0]
 80016fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001700:	81a3      	strh	r3, [r4, #12]
 8001702:	9b00      	ldr	r3, [sp, #0]
 8001704:	6163      	str	r3, [r4, #20]
 8001706:	9b01      	ldr	r3, [sp, #4]
 8001708:	6120      	str	r0, [r4, #16]
 800170a:	b15b      	cbz	r3, 8001724 <__smakebuf_r+0x74>
 800170c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001710:	4630      	mov	r0, r6
 8001712:	f000 f881 	bl	8001818 <_isatty_r>
 8001716:	b128      	cbz	r0, 8001724 <__smakebuf_r+0x74>
 8001718:	89a3      	ldrh	r3, [r4, #12]
 800171a:	f023 0303 	bic.w	r3, r3, #3
 800171e:	f043 0301 	orr.w	r3, r3, #1
 8001722:	81a3      	strh	r3, [r4, #12]
 8001724:	89a0      	ldrh	r0, [r4, #12]
 8001726:	4305      	orrs	r5, r0
 8001728:	81a5      	strh	r5, [r4, #12]
 800172a:	e7cd      	b.n	80016c8 <__smakebuf_r+0x18>
 800172c:	080008a9 	.word	0x080008a9

08001730 <__malloc_lock>:
 8001730:	4801      	ldr	r0, [pc, #4]	; (8001738 <__malloc_lock+0x8>)
 8001732:	f7ff b99d 	b.w	8000a70 <__retarget_lock_acquire_recursive>
 8001736:	bf00      	nop
 8001738:	200000d8 	.word	0x200000d8

0800173c <__malloc_unlock>:
 800173c:	4801      	ldr	r0, [pc, #4]	; (8001744 <__malloc_unlock+0x8>)
 800173e:	f7ff b998 	b.w	8000a72 <__retarget_lock_release_recursive>
 8001742:	bf00      	nop
 8001744:	200000d8 	.word	0x200000d8

08001748 <_read_r>:
 8001748:	b538      	push	{r3, r4, r5, lr}
 800174a:	4d07      	ldr	r5, [pc, #28]	; (8001768 <_read_r+0x20>)
 800174c:	4604      	mov	r4, r0
 800174e:	4608      	mov	r0, r1
 8001750:	4611      	mov	r1, r2
 8001752:	2200      	movs	r2, #0
 8001754:	602a      	str	r2, [r5, #0]
 8001756:	461a      	mov	r2, r3
 8001758:	f7fe fef6 	bl	8000548 <_read>
 800175c:	1c43      	adds	r3, r0, #1
 800175e:	d102      	bne.n	8001766 <_read_r+0x1e>
 8001760:	682b      	ldr	r3, [r5, #0]
 8001762:	b103      	cbz	r3, 8001766 <_read_r+0x1e>
 8001764:	6023      	str	r3, [r4, #0]
 8001766:	bd38      	pop	{r3, r4, r5, pc}
 8001768:	200000e0 	.word	0x200000e0

0800176c <_raise_r>:
 800176c:	291f      	cmp	r1, #31
 800176e:	b538      	push	{r3, r4, r5, lr}
 8001770:	4604      	mov	r4, r0
 8001772:	460d      	mov	r5, r1
 8001774:	d904      	bls.n	8001780 <_raise_r+0x14>
 8001776:	2316      	movs	r3, #22
 8001778:	6003      	str	r3, [r0, #0]
 800177a:	f04f 30ff 	mov.w	r0, #4294967295
 800177e:	bd38      	pop	{r3, r4, r5, pc}
 8001780:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8001782:	b112      	cbz	r2, 800178a <_raise_r+0x1e>
 8001784:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001788:	b94b      	cbnz	r3, 800179e <_raise_r+0x32>
 800178a:	4620      	mov	r0, r4
 800178c:	f000 f830 	bl	80017f0 <_getpid_r>
 8001790:	462a      	mov	r2, r5
 8001792:	4601      	mov	r1, r0
 8001794:	4620      	mov	r0, r4
 8001796:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800179a:	f000 b817 	b.w	80017cc <_kill_r>
 800179e:	2b01      	cmp	r3, #1
 80017a0:	d00a      	beq.n	80017b8 <_raise_r+0x4c>
 80017a2:	1c59      	adds	r1, r3, #1
 80017a4:	d103      	bne.n	80017ae <_raise_r+0x42>
 80017a6:	2316      	movs	r3, #22
 80017a8:	6003      	str	r3, [r0, #0]
 80017aa:	2001      	movs	r0, #1
 80017ac:	e7e7      	b.n	800177e <_raise_r+0x12>
 80017ae:	2400      	movs	r4, #0
 80017b0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80017b4:	4628      	mov	r0, r5
 80017b6:	4798      	blx	r3
 80017b8:	2000      	movs	r0, #0
 80017ba:	e7e0      	b.n	800177e <_raise_r+0x12>

080017bc <raise>:
 80017bc:	4b02      	ldr	r3, [pc, #8]	; (80017c8 <raise+0xc>)
 80017be:	4601      	mov	r1, r0
 80017c0:	6818      	ldr	r0, [r3, #0]
 80017c2:	f7ff bfd3 	b.w	800176c <_raise_r>
 80017c6:	bf00      	nop
 80017c8:	20000048 	.word	0x20000048

080017cc <_kill_r>:
 80017cc:	b538      	push	{r3, r4, r5, lr}
 80017ce:	4d07      	ldr	r5, [pc, #28]	; (80017ec <_kill_r+0x20>)
 80017d0:	2300      	movs	r3, #0
 80017d2:	4604      	mov	r4, r0
 80017d4:	4608      	mov	r0, r1
 80017d6:	4611      	mov	r1, r2
 80017d8:	602b      	str	r3, [r5, #0]
 80017da:	f7fe fe9b 	bl	8000514 <_kill>
 80017de:	1c43      	adds	r3, r0, #1
 80017e0:	d102      	bne.n	80017e8 <_kill_r+0x1c>
 80017e2:	682b      	ldr	r3, [r5, #0]
 80017e4:	b103      	cbz	r3, 80017e8 <_kill_r+0x1c>
 80017e6:	6023      	str	r3, [r4, #0]
 80017e8:	bd38      	pop	{r3, r4, r5, pc}
 80017ea:	bf00      	nop
 80017ec:	200000e0 	.word	0x200000e0

080017f0 <_getpid_r>:
 80017f0:	f7fe be88 	b.w	8000504 <_getpid>

080017f4 <_fstat_r>:
 80017f4:	b538      	push	{r3, r4, r5, lr}
 80017f6:	4d07      	ldr	r5, [pc, #28]	; (8001814 <_fstat_r+0x20>)
 80017f8:	2300      	movs	r3, #0
 80017fa:	4604      	mov	r4, r0
 80017fc:	4608      	mov	r0, r1
 80017fe:	4611      	mov	r1, r2
 8001800:	602b      	str	r3, [r5, #0]
 8001802:	f7fe fee6 	bl	80005d2 <_fstat>
 8001806:	1c43      	adds	r3, r0, #1
 8001808:	d102      	bne.n	8001810 <_fstat_r+0x1c>
 800180a:	682b      	ldr	r3, [r5, #0]
 800180c:	b103      	cbz	r3, 8001810 <_fstat_r+0x1c>
 800180e:	6023      	str	r3, [r4, #0]
 8001810:	bd38      	pop	{r3, r4, r5, pc}
 8001812:	bf00      	nop
 8001814:	200000e0 	.word	0x200000e0

08001818 <_isatty_r>:
 8001818:	b538      	push	{r3, r4, r5, lr}
 800181a:	4d06      	ldr	r5, [pc, #24]	; (8001834 <_isatty_r+0x1c>)
 800181c:	2300      	movs	r3, #0
 800181e:	4604      	mov	r4, r0
 8001820:	4608      	mov	r0, r1
 8001822:	602b      	str	r3, [r5, #0]
 8001824:	f7fe fee5 	bl	80005f2 <_isatty>
 8001828:	1c43      	adds	r3, r0, #1
 800182a:	d102      	bne.n	8001832 <_isatty_r+0x1a>
 800182c:	682b      	ldr	r3, [r5, #0]
 800182e:	b103      	cbz	r3, 8001832 <_isatty_r+0x1a>
 8001830:	6023      	str	r3, [r4, #0]
 8001832:	bd38      	pop	{r3, r4, r5, pc}
 8001834:	200000e0 	.word	0x200000e0

08001838 <_init>:
 8001838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800183a:	bf00      	nop
 800183c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800183e:	bc08      	pop	{r3}
 8001840:	469e      	mov	lr, r3
 8001842:	4770      	bx	lr

08001844 <_fini>:
 8001844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001846:	bf00      	nop
 8001848:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800184a:	bc08      	pop	{r3}
 800184c:	469e      	mov	lr, r3
 800184e:	4770      	bx	lr
